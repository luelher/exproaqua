<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AlmConf', 'premium');

/**
 * BaseAlmConf
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $almmatpri
 * @property string $almpropro
 * @property string $almproter
 * @property Almacene $Almacene_1
 * @property Almacene $Almacene_2
 * @property Almacene $Almacene_3
 * 
 * @method integer  getId()         Returns the current record's "id" value
 * @method string   getAlmmatpri()  Returns the current record's "almmatpri" value
 * @method string   getAlmpropro()  Returns the current record's "almpropro" value
 * @method string   getAlmproter()  Returns the current record's "almproter" value
 * @method Almacene getAlmacene1()  Returns the current record's "Almacene_1" value
 * @method Almacene getAlmacene2()  Returns the current record's "Almacene_2" value
 * @method Almacene getAlmacene3()  Returns the current record's "Almacene_3" value
 * @method AlmConf  setId()         Sets the current record's "id" value
 * @method AlmConf  setAlmmatpri()  Sets the current record's "almmatpri" value
 * @method AlmConf  setAlmpropro()  Sets the current record's "almpropro" value
 * @method AlmConf  setAlmproter()  Sets the current record's "almproter" value
 * @method AlmConf  setAlmacene1()  Sets the current record's "Almacene_1" value
 * @method AlmConf  setAlmacene2()  Sets the current record's "Almacene_2" value
 * @method AlmConf  setAlmacene3()  Sets the current record's "Almacene_3" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAlmConf extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('almconf');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('almmatpri', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('almpropro', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('almproter', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Almacene as Almacene_1', array(
             'local' => 'almmatpri',
             'foreign' => 'codigo'));

        $this->hasOne('Almacene as Almacene_2', array(
             'local' => 'almpropro',
             'foreign' => 'codigo'));

        $this->hasOne('Almacene as Almacene_3', array(
             'local' => 'almproter',
             'foreign' => 'codigo'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}