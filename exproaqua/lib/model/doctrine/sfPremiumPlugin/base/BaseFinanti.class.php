<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Finanti', 'premium');

/**
 * BaseFinanti
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $finan
 * @property string $cliente
 * @property string $nombrecli
 * @property string $fiador
 * @property string $cedula
 * @property string $dirhab
 * @property string $dirtrab
 * @property string $telefonos
 * @property string $tipodoc
 * @property string $documento
 * @property float $monto
 * @property float $inicialprc
 * @property float $inicial
 * @property float $saldoneto
 * @property float $interesprc
 * @property float $interes
 * @property float $gestionprc
 * @property float $gestion
 * @property float $gastosprc
 * @property float $gastos
 * @property float $tinicial
 * @property float $tfinanciar
 * @property float $periodos
 * @property float $intervalo
 * @property date $fdesde
 * @property date $fechaproc
 * @property string $usuario
 * @property string $nodo
 * @property date $fcuota1
 * @property date $fcuota2
 * @property float $mtocuota1
 * @property float $mtocuota2
 * @property string $vendedor
 * 
 * @method string  getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string  getAgencia()    Returns the current record's "agencia" value
 * @method string  getFinan()      Returns the current record's "finan" value
 * @method string  getCliente()    Returns the current record's "cliente" value
 * @method string  getNombrecli()  Returns the current record's "nombrecli" value
 * @method string  getFiador()     Returns the current record's "fiador" value
 * @method string  getCedula()     Returns the current record's "cedula" value
 * @method string  getDirhab()     Returns the current record's "dirhab" value
 * @method string  getDirtrab()    Returns the current record's "dirtrab" value
 * @method string  getTelefonos()  Returns the current record's "telefonos" value
 * @method string  getTipodoc()    Returns the current record's "tipodoc" value
 * @method string  getDocumento()  Returns the current record's "documento" value
 * @method float   getMonto()      Returns the current record's "monto" value
 * @method float   getInicialprc() Returns the current record's "inicialprc" value
 * @method float   getInicial()    Returns the current record's "inicial" value
 * @method float   getSaldoneto()  Returns the current record's "saldoneto" value
 * @method float   getInteresprc() Returns the current record's "interesprc" value
 * @method float   getInteres()    Returns the current record's "interes" value
 * @method float   getGestionprc() Returns the current record's "gestionprc" value
 * @method float   getGestion()    Returns the current record's "gestion" value
 * @method float   getGastosprc()  Returns the current record's "gastosprc" value
 * @method float   getGastos()     Returns the current record's "gastos" value
 * @method float   getTinicial()   Returns the current record's "tinicial" value
 * @method float   getTfinanciar() Returns the current record's "tfinanciar" value
 * @method float   getPeriodos()   Returns the current record's "periodos" value
 * @method float   getIntervalo()  Returns the current record's "intervalo" value
 * @method date    getFdesde()     Returns the current record's "fdesde" value
 * @method date    getFechaproc()  Returns the current record's "fechaproc" value
 * @method string  getUsuario()    Returns the current record's "usuario" value
 * @method string  getNodo()       Returns the current record's "nodo" value
 * @method date    getFcuota1()    Returns the current record's "fcuota1" value
 * @method date    getFcuota2()    Returns the current record's "fcuota2" value
 * @method float   getMtocuota1()  Returns the current record's "mtocuota1" value
 * @method float   getMtocuota2()  Returns the current record's "mtocuota2" value
 * @method string  getVendedor()   Returns the current record's "vendedor" value
 * @method Finanti setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Finanti setAgencia()    Sets the current record's "agencia" value
 * @method Finanti setFinan()      Sets the current record's "finan" value
 * @method Finanti setCliente()    Sets the current record's "cliente" value
 * @method Finanti setNombrecli()  Sets the current record's "nombrecli" value
 * @method Finanti setFiador()     Sets the current record's "fiador" value
 * @method Finanti setCedula()     Sets the current record's "cedula" value
 * @method Finanti setDirhab()     Sets the current record's "dirhab" value
 * @method Finanti setDirtrab()    Sets the current record's "dirtrab" value
 * @method Finanti setTelefonos()  Sets the current record's "telefonos" value
 * @method Finanti setTipodoc()    Sets the current record's "tipodoc" value
 * @method Finanti setDocumento()  Sets the current record's "documento" value
 * @method Finanti setMonto()      Sets the current record's "monto" value
 * @method Finanti setInicialprc() Sets the current record's "inicialprc" value
 * @method Finanti setInicial()    Sets the current record's "inicial" value
 * @method Finanti setSaldoneto()  Sets the current record's "saldoneto" value
 * @method Finanti setInteresprc() Sets the current record's "interesprc" value
 * @method Finanti setInteres()    Sets the current record's "interes" value
 * @method Finanti setGestionprc() Sets the current record's "gestionprc" value
 * @method Finanti setGestion()    Sets the current record's "gestion" value
 * @method Finanti setGastosprc()  Sets the current record's "gastosprc" value
 * @method Finanti setGastos()     Sets the current record's "gastos" value
 * @method Finanti setTinicial()   Sets the current record's "tinicial" value
 * @method Finanti setTfinanciar() Sets the current record's "tfinanciar" value
 * @method Finanti setPeriodos()   Sets the current record's "periodos" value
 * @method Finanti setIntervalo()  Sets the current record's "intervalo" value
 * @method Finanti setFdesde()     Sets the current record's "fdesde" value
 * @method Finanti setFechaproc()  Sets the current record's "fechaproc" value
 * @method Finanti setUsuario()    Sets the current record's "usuario" value
 * @method Finanti setNodo()       Sets the current record's "nodo" value
 * @method Finanti setFcuota1()    Sets the current record's "fcuota1" value
 * @method Finanti setFcuota2()    Sets the current record's "fcuota2" value
 * @method Finanti setMtocuota1()  Sets the current record's "mtocuota1" value
 * @method Finanti setMtocuota2()  Sets the current record's "mtocuota2" value
 * @method Finanti setVendedor()   Sets the current record's "vendedor" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseFinanti extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('finanti');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('finan', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('cliente', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('nombrecli', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('fiador', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('cedula', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('dirhab', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('dirtrab', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('telefonos', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('tipodoc', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('monto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('inicialprc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('inicial', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('saldoneto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('interesprc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('interes', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('gestionprc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('gestion', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('gastosprc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('gastos', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tinicial', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tfinanciar', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('periodos', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('intervalo', 'float', 11, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '11',
             ));
        $this->hasColumn('fdesde', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('fechaproc', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('usuario', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('nodo', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('fcuota1', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('fcuota2', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('mtocuota1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('mtocuota2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('vendedor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}