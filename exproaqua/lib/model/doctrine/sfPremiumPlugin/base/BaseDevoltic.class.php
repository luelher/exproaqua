<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Devoltic', 'premium');

/**
 * BaseDevoltic
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $tipodoc
 * @property string $documento
 * @property string $ordentrab
 * @property string $codcliente
 * @property string $nombrecli
 * @property string $contacto
 * @property string $rif
 * @property string $nit
 * @property float $tipoprecio
 * @property string $orden
 * @property date $emision
 * @property date $vence
 * @property float $totcosto
 * @property float $totcomi
 * @property float $totbruto
 * @property float $totneto
 * @property float $totpagos
 * @property float $totalfinal
 * @property float $totimpuest
 * @property float $totdescuen
 * @property float $impuesto1
 * @property float $impuesto2
 * @property float $impuesto3
 * @property float $impuesto4
 * @property float $impuesto5
 * @property float $impuesto6
 * @property float $recargos
 * @property float $dsctoend1
 * @property float $dsctoend2
 * @property float $dsctolinea
 * @property string $notas
 * @property string $estatusdoc
 * @property date $ultimopag
 * @property float $diascred
 * @property string $vendedor
 * @property float $factorcamb
 * @property date $fechanul
 * @property string $uanulador
 * @property string $uemisor
 * @property string $estacion
 * @property float $sinimpuest
 * @property string $almacen
 * @property string $sector
 * @property float $formafis
 * @property float $al_libro
 * @property string $codigoret
 * @property float $retencion
 * @property float $aux1
 * @property float $aux2
 * @property string $aplicadoa
 * @property string $referencia
 * @property string $operac
 * @property string $motanul
 * @property float $seimporto
 * @property float $dbcr
 * @property string $horadocum
 * @property float $ampm
 * @property float $tranferido
 * @property float $procedecre
 * @property float $entregado
 * @property float $vuelto
 * @property float $gasto
 * @property string $requisicio
 * @property string $firaprob
 * @property date $entrega
 * @property float $modalidad
 * @property string $cuentacon
 * @property float $integrado
 * @property float $f_monedaex
 * @property float $baseimpo1
 * @property float $baseimpo2
 * @property float $baseimpo3
 * @property float $imp_nacional
 * @property float $imp_producc
 * @property string $idvalidacion
 * 
 * @method string   getIdEmpresa()    Returns the current record's "id_empresa" value
 * @method string   getAgencia()      Returns the current record's "agencia" value
 * @method string   getTipodoc()      Returns the current record's "tipodoc" value
 * @method string   getDocumento()    Returns the current record's "documento" value
 * @method string   getOrdentrab()    Returns the current record's "ordentrab" value
 * @method string   getCodcliente()   Returns the current record's "codcliente" value
 * @method string   getNombrecli()    Returns the current record's "nombrecli" value
 * @method string   getContacto()     Returns the current record's "contacto" value
 * @method string   getRif()          Returns the current record's "rif" value
 * @method string   getNit()          Returns the current record's "nit" value
 * @method float    getTipoprecio()   Returns the current record's "tipoprecio" value
 * @method string   getOrden()        Returns the current record's "orden" value
 * @method date     getEmision()      Returns the current record's "emision" value
 * @method date     getVence()        Returns the current record's "vence" value
 * @method float    getTotcosto()     Returns the current record's "totcosto" value
 * @method float    getTotcomi()      Returns the current record's "totcomi" value
 * @method float    getTotbruto()     Returns the current record's "totbruto" value
 * @method float    getTotneto()      Returns the current record's "totneto" value
 * @method float    getTotpagos()     Returns the current record's "totpagos" value
 * @method float    getTotalfinal()   Returns the current record's "totalfinal" value
 * @method float    getTotimpuest()   Returns the current record's "totimpuest" value
 * @method float    getTotdescuen()   Returns the current record's "totdescuen" value
 * @method float    getImpuesto1()    Returns the current record's "impuesto1" value
 * @method float    getImpuesto2()    Returns the current record's "impuesto2" value
 * @method float    getImpuesto3()    Returns the current record's "impuesto3" value
 * @method float    getImpuesto4()    Returns the current record's "impuesto4" value
 * @method float    getImpuesto5()    Returns the current record's "impuesto5" value
 * @method float    getImpuesto6()    Returns the current record's "impuesto6" value
 * @method float    getRecargos()     Returns the current record's "recargos" value
 * @method float    getDsctoend1()    Returns the current record's "dsctoend1" value
 * @method float    getDsctoend2()    Returns the current record's "dsctoend2" value
 * @method float    getDsctolinea()   Returns the current record's "dsctolinea" value
 * @method string   getNotas()        Returns the current record's "notas" value
 * @method string   getEstatusdoc()   Returns the current record's "estatusdoc" value
 * @method date     getUltimopag()    Returns the current record's "ultimopag" value
 * @method float    getDiascred()     Returns the current record's "diascred" value
 * @method string   getVendedor()     Returns the current record's "vendedor" value
 * @method float    getFactorcamb()   Returns the current record's "factorcamb" value
 * @method date     getFechanul()     Returns the current record's "fechanul" value
 * @method string   getUanulador()    Returns the current record's "uanulador" value
 * @method string   getUemisor()      Returns the current record's "uemisor" value
 * @method string   getEstacion()     Returns the current record's "estacion" value
 * @method float    getSinimpuest()   Returns the current record's "sinimpuest" value
 * @method string   getAlmacen()      Returns the current record's "almacen" value
 * @method string   getSector()       Returns the current record's "sector" value
 * @method float    getFormafis()     Returns the current record's "formafis" value
 * @method float    getAlLibro()      Returns the current record's "al_libro" value
 * @method string   getCodigoret()    Returns the current record's "codigoret" value
 * @method float    getRetencion()    Returns the current record's "retencion" value
 * @method float    getAux1()         Returns the current record's "aux1" value
 * @method float    getAux2()         Returns the current record's "aux2" value
 * @method string   getAplicadoa()    Returns the current record's "aplicadoa" value
 * @method string   getReferencia()   Returns the current record's "referencia" value
 * @method string   getOperac()       Returns the current record's "operac" value
 * @method string   getMotanul()      Returns the current record's "motanul" value
 * @method float    getSeimporto()    Returns the current record's "seimporto" value
 * @method float    getDbcr()         Returns the current record's "dbcr" value
 * @method string   getHoradocum()    Returns the current record's "horadocum" value
 * @method float    getAmpm()         Returns the current record's "ampm" value
 * @method float    getTranferido()   Returns the current record's "tranferido" value
 * @method float    getProcedecre()   Returns the current record's "procedecre" value
 * @method float    getEntregado()    Returns the current record's "entregado" value
 * @method float    getVuelto()       Returns the current record's "vuelto" value
 * @method float    getGasto()        Returns the current record's "gasto" value
 * @method string   getRequisicio()   Returns the current record's "requisicio" value
 * @method string   getFiraprob()     Returns the current record's "firaprob" value
 * @method date     getEntrega()      Returns the current record's "entrega" value
 * @method float    getModalidad()    Returns the current record's "modalidad" value
 * @method string   getCuentacon()    Returns the current record's "cuentacon" value
 * @method float    getIntegrado()    Returns the current record's "integrado" value
 * @method float    getFMonedaex()    Returns the current record's "f_monedaex" value
 * @method float    getBaseimpo1()    Returns the current record's "baseimpo1" value
 * @method float    getBaseimpo2()    Returns the current record's "baseimpo2" value
 * @method float    getBaseimpo3()    Returns the current record's "baseimpo3" value
 * @method float    getImpNacional()  Returns the current record's "imp_nacional" value
 * @method float    getImpProducc()   Returns the current record's "imp_producc" value
 * @method string   getIdvalidacion() Returns the current record's "idvalidacion" value
 * @method Devoltic setIdEmpresa()    Sets the current record's "id_empresa" value
 * @method Devoltic setAgencia()      Sets the current record's "agencia" value
 * @method Devoltic setTipodoc()      Sets the current record's "tipodoc" value
 * @method Devoltic setDocumento()    Sets the current record's "documento" value
 * @method Devoltic setOrdentrab()    Sets the current record's "ordentrab" value
 * @method Devoltic setCodcliente()   Sets the current record's "codcliente" value
 * @method Devoltic setNombrecli()    Sets the current record's "nombrecli" value
 * @method Devoltic setContacto()     Sets the current record's "contacto" value
 * @method Devoltic setRif()          Sets the current record's "rif" value
 * @method Devoltic setNit()          Sets the current record's "nit" value
 * @method Devoltic setTipoprecio()   Sets the current record's "tipoprecio" value
 * @method Devoltic setOrden()        Sets the current record's "orden" value
 * @method Devoltic setEmision()      Sets the current record's "emision" value
 * @method Devoltic setVence()        Sets the current record's "vence" value
 * @method Devoltic setTotcosto()     Sets the current record's "totcosto" value
 * @method Devoltic setTotcomi()      Sets the current record's "totcomi" value
 * @method Devoltic setTotbruto()     Sets the current record's "totbruto" value
 * @method Devoltic setTotneto()      Sets the current record's "totneto" value
 * @method Devoltic setTotpagos()     Sets the current record's "totpagos" value
 * @method Devoltic setTotalfinal()   Sets the current record's "totalfinal" value
 * @method Devoltic setTotimpuest()   Sets the current record's "totimpuest" value
 * @method Devoltic setTotdescuen()   Sets the current record's "totdescuen" value
 * @method Devoltic setImpuesto1()    Sets the current record's "impuesto1" value
 * @method Devoltic setImpuesto2()    Sets the current record's "impuesto2" value
 * @method Devoltic setImpuesto3()    Sets the current record's "impuesto3" value
 * @method Devoltic setImpuesto4()    Sets the current record's "impuesto4" value
 * @method Devoltic setImpuesto5()    Sets the current record's "impuesto5" value
 * @method Devoltic setImpuesto6()    Sets the current record's "impuesto6" value
 * @method Devoltic setRecargos()     Sets the current record's "recargos" value
 * @method Devoltic setDsctoend1()    Sets the current record's "dsctoend1" value
 * @method Devoltic setDsctoend2()    Sets the current record's "dsctoend2" value
 * @method Devoltic setDsctolinea()   Sets the current record's "dsctolinea" value
 * @method Devoltic setNotas()        Sets the current record's "notas" value
 * @method Devoltic setEstatusdoc()   Sets the current record's "estatusdoc" value
 * @method Devoltic setUltimopag()    Sets the current record's "ultimopag" value
 * @method Devoltic setDiascred()     Sets the current record's "diascred" value
 * @method Devoltic setVendedor()     Sets the current record's "vendedor" value
 * @method Devoltic setFactorcamb()   Sets the current record's "factorcamb" value
 * @method Devoltic setFechanul()     Sets the current record's "fechanul" value
 * @method Devoltic setUanulador()    Sets the current record's "uanulador" value
 * @method Devoltic setUemisor()      Sets the current record's "uemisor" value
 * @method Devoltic setEstacion()     Sets the current record's "estacion" value
 * @method Devoltic setSinimpuest()   Sets the current record's "sinimpuest" value
 * @method Devoltic setAlmacen()      Sets the current record's "almacen" value
 * @method Devoltic setSector()       Sets the current record's "sector" value
 * @method Devoltic setFormafis()     Sets the current record's "formafis" value
 * @method Devoltic setAlLibro()      Sets the current record's "al_libro" value
 * @method Devoltic setCodigoret()    Sets the current record's "codigoret" value
 * @method Devoltic setRetencion()    Sets the current record's "retencion" value
 * @method Devoltic setAux1()         Sets the current record's "aux1" value
 * @method Devoltic setAux2()         Sets the current record's "aux2" value
 * @method Devoltic setAplicadoa()    Sets the current record's "aplicadoa" value
 * @method Devoltic setReferencia()   Sets the current record's "referencia" value
 * @method Devoltic setOperac()       Sets the current record's "operac" value
 * @method Devoltic setMotanul()      Sets the current record's "motanul" value
 * @method Devoltic setSeimporto()    Sets the current record's "seimporto" value
 * @method Devoltic setDbcr()         Sets the current record's "dbcr" value
 * @method Devoltic setHoradocum()    Sets the current record's "horadocum" value
 * @method Devoltic setAmpm()         Sets the current record's "ampm" value
 * @method Devoltic setTranferido()   Sets the current record's "tranferido" value
 * @method Devoltic setProcedecre()   Sets the current record's "procedecre" value
 * @method Devoltic setEntregado()    Sets the current record's "entregado" value
 * @method Devoltic setVuelto()       Sets the current record's "vuelto" value
 * @method Devoltic setGasto()        Sets the current record's "gasto" value
 * @method Devoltic setRequisicio()   Sets the current record's "requisicio" value
 * @method Devoltic setFiraprob()     Sets the current record's "firaprob" value
 * @method Devoltic setEntrega()      Sets the current record's "entrega" value
 * @method Devoltic setModalidad()    Sets the current record's "modalidad" value
 * @method Devoltic setCuentacon()    Sets the current record's "cuentacon" value
 * @method Devoltic setIntegrado()    Sets the current record's "integrado" value
 * @method Devoltic setFMonedaex()    Sets the current record's "f_monedaex" value
 * @method Devoltic setBaseimpo1()    Sets the current record's "baseimpo1" value
 * @method Devoltic setBaseimpo2()    Sets the current record's "baseimpo2" value
 * @method Devoltic setBaseimpo3()    Sets the current record's "baseimpo3" value
 * @method Devoltic setImpNacional()  Sets the current record's "imp_nacional" value
 * @method Devoltic setImpProducc()   Sets the current record's "imp_producc" value
 * @method Devoltic setIdvalidacion() Sets the current record's "idvalidacion" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis Hernández
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDevoltic extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('devoltic');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('tipodoc', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('ordentrab', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('codcliente', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('nombrecli', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('contacto', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('rif', 'string', 14, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '14',
             ));
        $this->hasColumn('nit', 'string', 14, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '14',
             ));
        $this->hasColumn('tipoprecio', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('orden', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('emision', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('vence', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('totcosto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('totcomi', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('totbruto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('totneto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('totpagos', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('totalfinal', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('totimpuest', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('totdescuen', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto3', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto4', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto5', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto6', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('recargos', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dsctoend1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dsctoend2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dsctolinea', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('notas', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('estatusdoc', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('ultimopag', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('diascred', 'float', 5, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '5',
             ));
        $this->hasColumn('vendedor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('factorcamb', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fechanul', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('uanulador', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('uemisor', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('estacion', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('sinimpuest', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('almacen', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('sector', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('formafis', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('al_libro', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('codigoret', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('retencion', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('aux1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('aux2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('aplicadoa', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('referencia', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('operac', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('motanul', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('seimporto', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('dbcr', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('horadocum', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '5',
             ));
        $this->hasColumn('ampm', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('tranferido', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('procedecre', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('entregado', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('vuelto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('gasto', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('requisicio', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('firaprob', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('entrega', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('modalidad', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('cuentacon', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('integrado', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('f_monedaex', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('baseimpo1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('baseimpo2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('baseimpo3', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('imp_nacional', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('imp_producc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('idvalidacion', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}