<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cajachica', 'premium');

/**
 * BaseCajachica
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $codigocaja
 * @property string $codigoconcepto
 * @property string $nombre
 * @property float $ingreso
 * @property float $egreso
 * @property date $fecha
 * @property string $pid
 * @property float $cerrado
 * @property string $referencia
 * @property string $nota
 * @property string $horadocum
 * @property float $ampm
 * @property string $turno
 * 
 * @method string    getIdEmpresa()      Returns the current record's "id_empresa" value
 * @method string    getAgencia()        Returns the current record's "agencia" value
 * @method string    getCodigocaja()     Returns the current record's "codigocaja" value
 * @method string    getCodigoconcepto() Returns the current record's "codigoconcepto" value
 * @method string    getNombre()         Returns the current record's "nombre" value
 * @method float     getIngreso()        Returns the current record's "ingreso" value
 * @method float     getEgreso()         Returns the current record's "egreso" value
 * @method date      getFecha()          Returns the current record's "fecha" value
 * @method string    getPid()            Returns the current record's "pid" value
 * @method float     getCerrado()        Returns the current record's "cerrado" value
 * @method string    getReferencia()     Returns the current record's "referencia" value
 * @method string    getNota()           Returns the current record's "nota" value
 * @method string    getHoradocum()      Returns the current record's "horadocum" value
 * @method float     getAmpm()           Returns the current record's "ampm" value
 * @method string    getTurno()          Returns the current record's "turno" value
 * @method Cajachica setIdEmpresa()      Sets the current record's "id_empresa" value
 * @method Cajachica setAgencia()        Sets the current record's "agencia" value
 * @method Cajachica setCodigocaja()     Sets the current record's "codigocaja" value
 * @method Cajachica setCodigoconcepto() Sets the current record's "codigoconcepto" value
 * @method Cajachica setNombre()         Sets the current record's "nombre" value
 * @method Cajachica setIngreso()        Sets the current record's "ingreso" value
 * @method Cajachica setEgreso()         Sets the current record's "egreso" value
 * @method Cajachica setFecha()          Sets the current record's "fecha" value
 * @method Cajachica setPid()            Sets the current record's "pid" value
 * @method Cajachica setCerrado()        Sets the current record's "cerrado" value
 * @method Cajachica setReferencia()     Sets the current record's "referencia" value
 * @method Cajachica setNota()           Sets the current record's "nota" value
 * @method Cajachica setHoradocum()      Sets the current record's "horadocum" value
 * @method Cajachica setAmpm()           Sets the current record's "ampm" value
 * @method Cajachica setTurno()          Sets the current record's "turno" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCajachica extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cajachica');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('codigocaja', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('codigoconcepto', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('nombre', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('ingreso', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('egreso', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('pid', 'string', 12, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '12',
             ));
        $this->hasColumn('cerrado', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('referencia', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('nota', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('horadocum', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('ampm', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('turno', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}