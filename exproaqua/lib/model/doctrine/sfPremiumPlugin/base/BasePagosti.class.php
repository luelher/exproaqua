<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Pagosti', 'premium');

/**
 * BasePagosti
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $tipodoc
 * @property string $tipopago
 * @property string $documprov
 * @property string $comprob
 * @property string $codigoprov
 * @property string $nombreprov
 * @property string $documento
 * @property date $fpago
 * @property float $totpagos
 * @property float $retencion
 * @property float $por_retenc
 * @property float $totiva
 * @property string $concepto
 * @property float $seleccion
 * @property string $bancocheq
 * @property float $montocheq
 * @property float $efectivo
 * @property string $caja
 * @property string $banco
 * @property string $chequenro
 * @property string $statuspag
 * @property string $uanulador
 * @property string $uemisor
 * @property date $fechanul
 * @property float $monto
 * @property date $emifecha
 * 
 * @method string  getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string  getAgencia()    Returns the current record's "agencia" value
 * @method string  getTipodoc()    Returns the current record's "tipodoc" value
 * @method string  getTipopago()   Returns the current record's "tipopago" value
 * @method string  getDocumprov()  Returns the current record's "documprov" value
 * @method string  getComprob()    Returns the current record's "comprob" value
 * @method string  getCodigoprov() Returns the current record's "codigoprov" value
 * @method string  getNombreprov() Returns the current record's "nombreprov" value
 * @method string  getDocumento()  Returns the current record's "documento" value
 * @method date    getFpago()      Returns the current record's "fpago" value
 * @method float   getTotpagos()   Returns the current record's "totpagos" value
 * @method float   getRetencion()  Returns the current record's "retencion" value
 * @method float   getPorRetenc()  Returns the current record's "por_retenc" value
 * @method float   getTotiva()     Returns the current record's "totiva" value
 * @method string  getConcepto()   Returns the current record's "concepto" value
 * @method float   getSeleccion()  Returns the current record's "seleccion" value
 * @method string  getBancocheq()  Returns the current record's "bancocheq" value
 * @method float   getMontocheq()  Returns the current record's "montocheq" value
 * @method float   getEfectivo()   Returns the current record's "efectivo" value
 * @method string  getCaja()       Returns the current record's "caja" value
 * @method string  getBanco()      Returns the current record's "banco" value
 * @method string  getChequenro()  Returns the current record's "chequenro" value
 * @method string  getStatuspag()  Returns the current record's "statuspag" value
 * @method string  getUanulador()  Returns the current record's "uanulador" value
 * @method string  getUemisor()    Returns the current record's "uemisor" value
 * @method date    getFechanul()   Returns the current record's "fechanul" value
 * @method float   getMonto()      Returns the current record's "monto" value
 * @method date    getEmifecha()   Returns the current record's "emifecha" value
 * @method Pagosti setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Pagosti setAgencia()    Sets the current record's "agencia" value
 * @method Pagosti setTipodoc()    Sets the current record's "tipodoc" value
 * @method Pagosti setTipopago()   Sets the current record's "tipopago" value
 * @method Pagosti setDocumprov()  Sets the current record's "documprov" value
 * @method Pagosti setComprob()    Sets the current record's "comprob" value
 * @method Pagosti setCodigoprov() Sets the current record's "codigoprov" value
 * @method Pagosti setNombreprov() Sets the current record's "nombreprov" value
 * @method Pagosti setDocumento()  Sets the current record's "documento" value
 * @method Pagosti setFpago()      Sets the current record's "fpago" value
 * @method Pagosti setTotpagos()   Sets the current record's "totpagos" value
 * @method Pagosti setRetencion()  Sets the current record's "retencion" value
 * @method Pagosti setPorRetenc()  Sets the current record's "por_retenc" value
 * @method Pagosti setTotiva()     Sets the current record's "totiva" value
 * @method Pagosti setConcepto()   Sets the current record's "concepto" value
 * @method Pagosti setSeleccion()  Sets the current record's "seleccion" value
 * @method Pagosti setBancocheq()  Sets the current record's "bancocheq" value
 * @method Pagosti setMontocheq()  Sets the current record's "montocheq" value
 * @method Pagosti setEfectivo()   Sets the current record's "efectivo" value
 * @method Pagosti setCaja()       Sets the current record's "caja" value
 * @method Pagosti setBanco()      Sets the current record's "banco" value
 * @method Pagosti setChequenro()  Sets the current record's "chequenro" value
 * @method Pagosti setStatuspag()  Sets the current record's "statuspag" value
 * @method Pagosti setUanulador()  Sets the current record's "uanulador" value
 * @method Pagosti setUemisor()    Sets the current record's "uemisor" value
 * @method Pagosti setFechanul()   Sets the current record's "fechanul" value
 * @method Pagosti setMonto()      Sets the current record's "monto" value
 * @method Pagosti setEmifecha()   Sets the current record's "emifecha" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BasePagosti extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pagosti');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('tipodoc', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('tipopago', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('documprov', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('comprob', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('codigoprov', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('nombreprov', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('fpago', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('totpagos', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('retencion', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('por_retenc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('totiva', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('concepto', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('seleccion', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('bancocheq', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '40',
             ));
        $this->hasColumn('montocheq', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('efectivo', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('caja', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('banco', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('chequenro', 'string', 14, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '14',
             ));
        $this->hasColumn('statuspag', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('uanulador', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('uemisor', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('fechanul', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('monto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('emifecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}