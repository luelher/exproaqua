<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Produccion', 'premium');

/**
 * BaseProduccion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $documento
 * @property date $fecha
 * @property string $codigoi
 * @property string $nombrei
 * @property string $codigop
 * @property string $nombrep
 * @property float $cantidadp
 * @property string $unidad
 * @property string $depositoo
 * @property string $depositor
 * @property string $depositod
 * @property string $realizador
 * @property string $responsab
 * @property string $concepto
 * @property float $prioridad
 * @property string $lote
 * 
 * @method string     getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string     getAgencia()    Returns the current record's "agencia" value
 * @method string     getDocumento()  Returns the current record's "documento" value
 * @method date       getFecha()      Returns the current record's "fecha" value
 * @method string     getCodigoi()    Returns the current record's "codigoi" value
 * @method string     getNombrei()    Returns the current record's "nombrei" value
 * @method string     getCodigop()    Returns the current record's "codigop" value
 * @method string     getNombrep()    Returns the current record's "nombrep" value
 * @method float      getCantidadp()  Returns the current record's "cantidadp" value
 * @method string     getUnidad()     Returns the current record's "unidad" value
 * @method string     getDepositoo()  Returns the current record's "depositoo" value
 * @method string     getDepositor()  Returns the current record's "depositor" value
 * @method string     getDepositod()  Returns the current record's "depositod" value
 * @method string     getRealizador() Returns the current record's "realizador" value
 * @method string     getResponsab()  Returns the current record's "responsab" value
 * @method string     getConcepto()   Returns the current record's "concepto" value
 * @method float      getPrioridad()  Returns the current record's "prioridad" value
 * @method string     getLote()       Returns the current record's "lote" value
 * @method Produccion setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Produccion setAgencia()    Sets the current record's "agencia" value
 * @method Produccion setDocumento()  Sets the current record's "documento" value
 * @method Produccion setFecha()      Sets the current record's "fecha" value
 * @method Produccion setCodigoi()    Sets the current record's "codigoi" value
 * @method Produccion setNombrei()    Sets the current record's "nombrei" value
 * @method Produccion setCodigop()    Sets the current record's "codigop" value
 * @method Produccion setNombrep()    Sets the current record's "nombrep" value
 * @method Produccion setCantidadp()  Sets the current record's "cantidadp" value
 * @method Produccion setUnidad()     Sets the current record's "unidad" value
 * @method Produccion setDepositoo()  Sets the current record's "depositoo" value
 * @method Produccion setDepositor()  Sets the current record's "depositor" value
 * @method Produccion setDepositod()  Sets the current record's "depositod" value
 * @method Produccion setRealizador() Sets the current record's "realizador" value
 * @method Produccion setResponsab()  Sets the current record's "responsab" value
 * @method Produccion setConcepto()   Sets the current record's "concepto" value
 * @method Produccion setPrioridad()  Sets the current record's "prioridad" value
 * @method Produccion setLote()       Sets the current record's "lote" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseProduccion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('produccion');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('codigoi', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('nombrei', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('codigop', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('nombrep', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('cantidadp', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('unidad', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('depositoo', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('depositor', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('depositod', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('realizador', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('responsab', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('concepto', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('prioridad', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('lote', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}