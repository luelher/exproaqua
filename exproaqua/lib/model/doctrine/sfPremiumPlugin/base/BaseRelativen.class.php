<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Relativen', 'premium');

/**
 * BaseRelativen
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $relacion
 * @property string $comprobant
 * @property string $codigoven
 * @property string $nombreven
 * @property string $concepto
 * @property float $totrel
 * @property string $cret1
 * @property string $cret2
 * @property float $nret1
 * @property float $nret2
 * @property float $tret
 * @property float $tfinal
 * @property string $statusrel
 * @property date $fechap
 * 
 * @method string    getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string    getAgencia()    Returns the current record's "agencia" value
 * @method string    getRelacion()   Returns the current record's "relacion" value
 * @method string    getComprobant() Returns the current record's "comprobant" value
 * @method string    getCodigoven()  Returns the current record's "codigoven" value
 * @method string    getNombreven()  Returns the current record's "nombreven" value
 * @method string    getConcepto()   Returns the current record's "concepto" value
 * @method float     getTotrel()     Returns the current record's "totrel" value
 * @method string    getCret1()      Returns the current record's "cret1" value
 * @method string    getCret2()      Returns the current record's "cret2" value
 * @method float     getNret1()      Returns the current record's "nret1" value
 * @method float     getNret2()      Returns the current record's "nret2" value
 * @method float     getTret()       Returns the current record's "tret" value
 * @method float     getTfinal()     Returns the current record's "tfinal" value
 * @method string    getStatusrel()  Returns the current record's "statusrel" value
 * @method date      getFechap()     Returns the current record's "fechap" value
 * @method Relativen setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Relativen setAgencia()    Sets the current record's "agencia" value
 * @method Relativen setRelacion()   Sets the current record's "relacion" value
 * @method Relativen setComprobant() Sets the current record's "comprobant" value
 * @method Relativen setCodigoven()  Sets the current record's "codigoven" value
 * @method Relativen setNombreven()  Sets the current record's "nombreven" value
 * @method Relativen setConcepto()   Sets the current record's "concepto" value
 * @method Relativen setTotrel()     Sets the current record's "totrel" value
 * @method Relativen setCret1()      Sets the current record's "cret1" value
 * @method Relativen setCret2()      Sets the current record's "cret2" value
 * @method Relativen setNret1()      Sets the current record's "nret1" value
 * @method Relativen setNret2()      Sets the current record's "nret2" value
 * @method Relativen setTret()       Sets the current record's "tret" value
 * @method Relativen setTfinal()     Sets the current record's "tfinal" value
 * @method Relativen setStatusrel()  Sets the current record's "statusrel" value
 * @method Relativen setFechap()     Sets the current record's "fechap" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRelativen extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('relativen');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('relacion', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('comprobant', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('codigoven', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('nombreven', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '40',
             ));
        $this->hasColumn('concepto', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('totrel', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cret1', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '40',
             ));
        $this->hasColumn('cret2', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '40',
             ));
        $this->hasColumn('nret1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('nret2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tret', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tfinal', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('statusrel', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('fechap', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}