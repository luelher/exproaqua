<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Despachadores', 'premium');

/**
 * BaseDespachadores
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $id_despachador
 * @property string $nombre
 * @property string $nombre_corto
 * @property string $cedula
 * @property string $nrorif
 * @property string $direccion
 * @property string $telefono
 * @property string $celular
 * @property string $email
 * @property string $vehiculo
 * @property string $placa
 * @property integer $estatus
 * @property string $rutafoto
 * 
 * @method string        getIdEmpresa()      Returns the current record's "id_empresa" value
 * @method string        getAgencia()        Returns the current record's "agencia" value
 * @method string        getIdDespachador()  Returns the current record's "id_despachador" value
 * @method string        getNombre()         Returns the current record's "nombre" value
 * @method string        getNombreCorto()    Returns the current record's "nombre_corto" value
 * @method string        getCedula()         Returns the current record's "cedula" value
 * @method string        getNrorif()         Returns the current record's "nrorif" value
 * @method string        getDireccion()      Returns the current record's "direccion" value
 * @method string        getTelefono()       Returns the current record's "telefono" value
 * @method string        getCelular()        Returns the current record's "celular" value
 * @method string        getEmail()          Returns the current record's "email" value
 * @method string        getVehiculo()       Returns the current record's "vehiculo" value
 * @method string        getPlaca()          Returns the current record's "placa" value
 * @method integer       getEstatus()        Returns the current record's "estatus" value
 * @method string        getRutafoto()       Returns the current record's "rutafoto" value
 * @method Despachadores setIdEmpresa()      Sets the current record's "id_empresa" value
 * @method Despachadores setAgencia()        Sets the current record's "agencia" value
 * @method Despachadores setIdDespachador()  Sets the current record's "id_despachador" value
 * @method Despachadores setNombre()         Sets the current record's "nombre" value
 * @method Despachadores setNombreCorto()    Sets the current record's "nombre_corto" value
 * @method Despachadores setCedula()         Sets the current record's "cedula" value
 * @method Despachadores setNrorif()         Sets the current record's "nrorif" value
 * @method Despachadores setDireccion()      Sets the current record's "direccion" value
 * @method Despachadores setTelefono()       Sets the current record's "telefono" value
 * @method Despachadores setCelular()        Sets the current record's "celular" value
 * @method Despachadores setEmail()          Sets the current record's "email" value
 * @method Despachadores setVehiculo()       Sets the current record's "vehiculo" value
 * @method Despachadores setPlaca()          Sets the current record's "placa" value
 * @method Despachadores setEstatus()        Sets the current record's "estatus" value
 * @method Despachadores setRutafoto()       Sets the current record's "rutafoto" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDespachadores extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('despachadores');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('id_despachador', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('nombre', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '150',
             ));
        $this->hasColumn('nombre_corto', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('cedula', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('nrorif', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('direccion', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '200',
             ));
        $this->hasColumn('telefono', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('celular', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('email', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '150',
             ));
        $this->hasColumn('vehiculo', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('placa', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('estatus', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('rutafoto', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '200',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}