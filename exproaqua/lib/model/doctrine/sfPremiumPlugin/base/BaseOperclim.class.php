<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Operclim', 'premium');

/**
 * BaseOperclim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $tiporec
 * @property string $recibo
 * @property float $monto
 * @property string $tipodoc
 * @property float $saldo
 * @property string $documento
 * @property float $tranferido
 * @property float $procedecre
 * @property float $integrado
 * @property date $fac_emi
 * @property date $reci_emi
 * @property string $almacen
 * @property string $vendedor
 * @property string $cliente
 * @property string $sector
 * @property string $horadocum
 * @property float $ampm
 * @property string $caja
 * @property string $statusrec
 * @property string $turno
 * @property timestamp $fechayhora
 * 
 * @method string    getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string    getAgencia()    Returns the current record's "agencia" value
 * @method string    getTiporec()    Returns the current record's "tiporec" value
 * @method string    getRecibo()     Returns the current record's "recibo" value
 * @method float     getMonto()      Returns the current record's "monto" value
 * @method string    getTipodoc()    Returns the current record's "tipodoc" value
 * @method float     getSaldo()      Returns the current record's "saldo" value
 * @method string    getDocumento()  Returns the current record's "documento" value
 * @method float     getTranferido() Returns the current record's "tranferido" value
 * @method float     getProcedecre() Returns the current record's "procedecre" value
 * @method float     getIntegrado()  Returns the current record's "integrado" value
 * @method date      getFacEmi()     Returns the current record's "fac_emi" value
 * @method date      getReciEmi()    Returns the current record's "reci_emi" value
 * @method string    getAlmacen()    Returns the current record's "almacen" value
 * @method string    getVendedor()   Returns the current record's "vendedor" value
 * @method string    getCliente()    Returns the current record's "cliente" value
 * @method string    getSector()     Returns the current record's "sector" value
 * @method string    getHoradocum()  Returns the current record's "horadocum" value
 * @method float     getAmpm()       Returns the current record's "ampm" value
 * @method string    getCaja()       Returns the current record's "caja" value
 * @method string    getStatusrec()  Returns the current record's "statusrec" value
 * @method string    getTurno()      Returns the current record's "turno" value
 * @method timestamp getFechayhora() Returns the current record's "fechayhora" value
 * @method Operclim  setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Operclim  setAgencia()    Sets the current record's "agencia" value
 * @method Operclim  setTiporec()    Sets the current record's "tiporec" value
 * @method Operclim  setRecibo()     Sets the current record's "recibo" value
 * @method Operclim  setMonto()      Sets the current record's "monto" value
 * @method Operclim  setTipodoc()    Sets the current record's "tipodoc" value
 * @method Operclim  setSaldo()      Sets the current record's "saldo" value
 * @method Operclim  setDocumento()  Sets the current record's "documento" value
 * @method Operclim  setTranferido() Sets the current record's "tranferido" value
 * @method Operclim  setProcedecre() Sets the current record's "procedecre" value
 * @method Operclim  setIntegrado()  Sets the current record's "integrado" value
 * @method Operclim  setFacEmi()     Sets the current record's "fac_emi" value
 * @method Operclim  setReciEmi()    Sets the current record's "reci_emi" value
 * @method Operclim  setAlmacen()    Sets the current record's "almacen" value
 * @method Operclim  setVendedor()   Sets the current record's "vendedor" value
 * @method Operclim  setCliente()    Sets the current record's "cliente" value
 * @method Operclim  setSector()     Sets the current record's "sector" value
 * @method Operclim  setHoradocum()  Sets the current record's "horadocum" value
 * @method Operclim  setAmpm()       Sets the current record's "ampm" value
 * @method Operclim  setCaja()       Sets the current record's "caja" value
 * @method Operclim  setStatusrec()  Sets the current record's "statusrec" value
 * @method Operclim  setTurno()      Sets the current record's "turno" value
 * @method Operclim  setFechayhora() Sets the current record's "fechayhora" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseOperclim extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('operclim');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('tiporec', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('recibo', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('monto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tipodoc', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('saldo', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('tranferido', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('procedecre', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('integrado', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('fac_emi', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('reci_emi', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('almacen', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('vendedor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('cliente', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('sector', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('horadocum', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '5',
             ));
        $this->hasColumn('ampm', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('caja', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('statusrec', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('turno', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('fechayhora', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}