<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Comisioncont', 'premium');

/**
 * BaseComisioncont
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $id_empresa
 * @property string $agencia
 * @property float $tipo
 * @property string $documento
 * @property string $solicitant
 * @property date $fechacont
 * @property string $codvend
 * @property string $tipovend
 * @property string $nombrecomi
 * @property float $montovend
 * @property string $tipoagente
 * @property string $nomcomiag
 * @property float $montoagen
 * @property float $status
 * @property date $pago
 * @property date $fechanul
 * @property string $motivo
 * 
 * @method integer      getId()         Returns the current record's "id" value
 * @method string       getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string       getAgencia()    Returns the current record's "agencia" value
 * @method float        getTipo()       Returns the current record's "tipo" value
 * @method string       getDocumento()  Returns the current record's "documento" value
 * @method string       getSolicitant() Returns the current record's "solicitant" value
 * @method date         getFechacont()  Returns the current record's "fechacont" value
 * @method string       getCodvend()    Returns the current record's "codvend" value
 * @method string       getTipovend()   Returns the current record's "tipovend" value
 * @method string       getNombrecomi() Returns the current record's "nombrecomi" value
 * @method float        getMontovend()  Returns the current record's "montovend" value
 * @method string       getTipoagente() Returns the current record's "tipoagente" value
 * @method string       getNomcomiag()  Returns the current record's "nomcomiag" value
 * @method float        getMontoagen()  Returns the current record's "montoagen" value
 * @method float        getStatus()     Returns the current record's "status" value
 * @method date         getPago()       Returns the current record's "pago" value
 * @method date         getFechanul()   Returns the current record's "fechanul" value
 * @method string       getMotivo()     Returns the current record's "motivo" value
 * @method Comisioncont setId()         Sets the current record's "id" value
 * @method Comisioncont setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Comisioncont setAgencia()    Sets the current record's "agencia" value
 * @method Comisioncont setTipo()       Sets the current record's "tipo" value
 * @method Comisioncont setDocumento()  Sets the current record's "documento" value
 * @method Comisioncont setSolicitant() Sets the current record's "solicitant" value
 * @method Comisioncont setFechacont()  Sets the current record's "fechacont" value
 * @method Comisioncont setCodvend()    Sets the current record's "codvend" value
 * @method Comisioncont setTipovend()   Sets the current record's "tipovend" value
 * @method Comisioncont setNombrecomi() Sets the current record's "nombrecomi" value
 * @method Comisioncont setMontovend()  Sets the current record's "montovend" value
 * @method Comisioncont setTipoagente() Sets the current record's "tipoagente" value
 * @method Comisioncont setNomcomiag()  Sets the current record's "nomcomiag" value
 * @method Comisioncont setMontoagen()  Sets the current record's "montoagen" value
 * @method Comisioncont setStatus()     Sets the current record's "status" value
 * @method Comisioncont setPago()       Sets the current record's "pago" value
 * @method Comisioncont setFechanul()   Sets the current record's "fechanul" value
 * @method Comisioncont setMotivo()     Sets the current record's "motivo" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseComisioncont extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comisioncont');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('tipo', 'float', 3, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('solicitant', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '80',
             ));
        $this->hasColumn('fechacont', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('codvend', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('tipovend', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('nombrecomi', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '80',
             ));
        $this->hasColumn('montovend', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tipoagente', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('nomcomiag', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '80',
             ));
        $this->hasColumn('montoagen', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('status', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('pago', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('fechanul', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('motivo', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '80',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}