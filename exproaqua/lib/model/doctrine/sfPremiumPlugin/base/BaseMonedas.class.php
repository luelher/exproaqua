<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Monedas', 'premium');

/**
 * BaseMonedas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $codigo
 * @property string $nombre
 * @property string $sigular
 * @property string $plural
 * @property string $simbolo
 * @property float $tipo
 * @property float $multi_div
 * @property float $ultimacotizacion
 * @property string $rutaicono
 * 
 * @method string  getIdEmpresa()        Returns the current record's "id_empresa" value
 * @method string  getAgencia()          Returns the current record's "agencia" value
 * @method string  getCodigo()           Returns the current record's "codigo" value
 * @method string  getNombre()           Returns the current record's "nombre" value
 * @method string  getSigular()          Returns the current record's "sigular" value
 * @method string  getPlural()           Returns the current record's "plural" value
 * @method string  getSimbolo()          Returns the current record's "simbolo" value
 * @method float   getTipo()             Returns the current record's "tipo" value
 * @method float   getMultiDiv()         Returns the current record's "multi_div" value
 * @method float   getUltimacotizacion() Returns the current record's "ultimacotizacion" value
 * @method string  getRutaicono()        Returns the current record's "rutaicono" value
 * @method Monedas setIdEmpresa()        Sets the current record's "id_empresa" value
 * @method Monedas setAgencia()          Sets the current record's "agencia" value
 * @method Monedas setCodigo()           Sets the current record's "codigo" value
 * @method Monedas setNombre()           Sets the current record's "nombre" value
 * @method Monedas setSigular()          Sets the current record's "sigular" value
 * @method Monedas setPlural()           Sets the current record's "plural" value
 * @method Monedas setSimbolo()          Sets the current record's "simbolo" value
 * @method Monedas setTipo()             Sets the current record's "tipo" value
 * @method Monedas setMultiDiv()         Sets the current record's "multi_div" value
 * @method Monedas setUltimacotizacion() Sets the current record's "ultimacotizacion" value
 * @method Monedas setRutaicono()        Sets the current record's "rutaicono" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseMonedas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('monedas');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('codigo', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('nombre', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('sigular', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('plural', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('simbolo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('tipo', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('multi_div', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('ultimacotizacion', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('rutaicono', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '150',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}