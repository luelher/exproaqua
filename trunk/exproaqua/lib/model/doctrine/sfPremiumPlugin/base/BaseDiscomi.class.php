<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Discomi', 'premium');

/**
 * BaseDiscomi
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $documento
 * @property string $tipodoc
 * @property string $codigo
 * @property string $nombre
 * @property string $pid
 * @property string $vendedor
 * @property string $nombvend
 * @property float $montoneto
 * @property float $porcentaje
 * @property float $comision
 * 
 * @method string  getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string  getAgencia()    Returns the current record's "agencia" value
 * @method string  getDocumento()  Returns the current record's "documento" value
 * @method string  getTipodoc()    Returns the current record's "tipodoc" value
 * @method string  getCodigo()     Returns the current record's "codigo" value
 * @method string  getNombre()     Returns the current record's "nombre" value
 * @method string  getPid()        Returns the current record's "pid" value
 * @method string  getVendedor()   Returns the current record's "vendedor" value
 * @method string  getNombvend()   Returns the current record's "nombvend" value
 * @method float   getMontoneto()  Returns the current record's "montoneto" value
 * @method float   getPorcentaje() Returns the current record's "porcentaje" value
 * @method float   getComision()   Returns the current record's "comision" value
 * @method Discomi setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Discomi setAgencia()    Sets the current record's "agencia" value
 * @method Discomi setDocumento()  Sets the current record's "documento" value
 * @method Discomi setTipodoc()    Sets the current record's "tipodoc" value
 * @method Discomi setCodigo()     Sets the current record's "codigo" value
 * @method Discomi setNombre()     Sets the current record's "nombre" value
 * @method Discomi setPid()        Sets the current record's "pid" value
 * @method Discomi setVendedor()   Sets the current record's "vendedor" value
 * @method Discomi setNombvend()   Sets the current record's "nombvend" value
 * @method Discomi setMontoneto()  Sets the current record's "montoneto" value
 * @method Discomi setPorcentaje() Sets the current record's "porcentaje" value
 * @method Discomi setComision()   Sets the current record's "comision" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDiscomi extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('discomi');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('tipodoc', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('codigo', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('pid', 'string', 12, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '12',
             ));
        $this->hasColumn('vendedor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('nombvend', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('montoneto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('porcentaje', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('comision', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}