<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Comprobante', 'premium');

/**
 * BaseComprobante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $id_empresa
 * @property string $agencia
 * @property string $codigo
 * @property string $descr
 * @property float $debe
 * @property float $haber
 * @property float $saldo
 * @property float $cuadra
 * @property string $mes
 * @property float $nmes
 * @property string $ano
 * @property string $moneda
 * @property float $tasa
 * @property float $contab
 * @property string $usuario
 * @property string $hora
 * @property string $estacion
 * @property string $cusuario
 * @property string $chora
 * @property string $cestacion
 * 
 * @method integer     getId()         Returns the current record's "id" value
 * @method string      getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string      getAgencia()    Returns the current record's "agencia" value
 * @method string      getCodigo()     Returns the current record's "codigo" value
 * @method string      getDescr()      Returns the current record's "descr" value
 * @method float       getDebe()       Returns the current record's "debe" value
 * @method float       getHaber()      Returns the current record's "haber" value
 * @method float       getSaldo()      Returns the current record's "saldo" value
 * @method float       getCuadra()     Returns the current record's "cuadra" value
 * @method string      getMes()        Returns the current record's "mes" value
 * @method float       getNmes()       Returns the current record's "nmes" value
 * @method string      getAno()        Returns the current record's "ano" value
 * @method string      getMoneda()     Returns the current record's "moneda" value
 * @method float       getTasa()       Returns the current record's "tasa" value
 * @method float       getContab()     Returns the current record's "contab" value
 * @method string      getUsuario()    Returns the current record's "usuario" value
 * @method string      getHora()       Returns the current record's "hora" value
 * @method string      getEstacion()   Returns the current record's "estacion" value
 * @method string      getCusuario()   Returns the current record's "cusuario" value
 * @method string      getChora()      Returns the current record's "chora" value
 * @method string      getCestacion()  Returns the current record's "cestacion" value
 * @method Comprobante setId()         Sets the current record's "id" value
 * @method Comprobante setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Comprobante setAgencia()    Sets the current record's "agencia" value
 * @method Comprobante setCodigo()     Sets the current record's "codigo" value
 * @method Comprobante setDescr()      Sets the current record's "descr" value
 * @method Comprobante setDebe()       Sets the current record's "debe" value
 * @method Comprobante setHaber()      Sets the current record's "haber" value
 * @method Comprobante setSaldo()      Sets the current record's "saldo" value
 * @method Comprobante setCuadra()     Sets the current record's "cuadra" value
 * @method Comprobante setMes()        Sets the current record's "mes" value
 * @method Comprobante setNmes()       Sets the current record's "nmes" value
 * @method Comprobante setAno()        Sets the current record's "ano" value
 * @method Comprobante setMoneda()     Sets the current record's "moneda" value
 * @method Comprobante setTasa()       Sets the current record's "tasa" value
 * @method Comprobante setContab()     Sets the current record's "contab" value
 * @method Comprobante setUsuario()    Sets the current record's "usuario" value
 * @method Comprobante setHora()       Sets the current record's "hora" value
 * @method Comprobante setEstacion()   Sets the current record's "estacion" value
 * @method Comprobante setCusuario()   Sets the current record's "cusuario" value
 * @method Comprobante setChora()      Sets the current record's "chora" value
 * @method Comprobante setCestacion()  Sets the current record's "cestacion" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseComprobante extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comprobante');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('codigo', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('descr', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('debe', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('haber', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('saldo', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cuadra', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('mes', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('nmes', 'float', 3, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('ano', 'string', 4, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('moneda', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('tasa', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('contab', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('usuario', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('hora', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('estacion', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('cusuario', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('chora', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cestacion', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}