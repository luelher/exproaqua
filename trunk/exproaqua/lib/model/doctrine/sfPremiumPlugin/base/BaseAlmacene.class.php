<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Almacene', 'premium');

/**
 * BaseAlmacene
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $codigo
 * @property string $nombre
 * @property float $activo
 * @property string $encargado
 * @property string $location
 * @property float $aux1
 * @property float $servicio
 * @property float $rma
 * @property Doctrine_Collection $AlmConf
 * 
 * @method string              getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string              getAgencia()    Returns the current record's "agencia" value
 * @method string              getCodigo()     Returns the current record's "codigo" value
 * @method string              getNombre()     Returns the current record's "nombre" value
 * @method float               getActivo()     Returns the current record's "activo" value
 * @method string              getEncargado()  Returns the current record's "encargado" value
 * @method string              getLocation()   Returns the current record's "location" value
 * @method float               getAux1()       Returns the current record's "aux1" value
 * @method float               getServicio()   Returns the current record's "servicio" value
 * @method float               getRma()        Returns the current record's "rma" value
 * @method Doctrine_Collection getAlmConf()    Returns the current record's "AlmConf" collection
 * @method Almacene            setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Almacene            setAgencia()    Sets the current record's "agencia" value
 * @method Almacene            setCodigo()     Sets the current record's "codigo" value
 * @method Almacene            setNombre()     Sets the current record's "nombre" value
 * @method Almacene            setActivo()     Sets the current record's "activo" value
 * @method Almacene            setEncargado()  Sets the current record's "encargado" value
 * @method Almacene            setLocation()   Sets the current record's "location" value
 * @method Almacene            setAux1()       Sets the current record's "aux1" value
 * @method Almacene            setServicio()   Sets the current record's "servicio" value
 * @method Almacene            setRma()        Sets the current record's "rma" value
 * @method Almacene            setAlmConf()    Sets the current record's "AlmConf" collection
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAlmacene extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('almacene');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('codigo', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('activo', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('encargado', 'string', 38, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '38',
             ));
        $this->hasColumn('location', 'string', 38, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '38',
             ));
        $this->hasColumn('aux1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('servicio', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('rma', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AlmConf', array(
             'local' => 'codigo',
             'foreign' => 'almmatpri'));
    }
}