<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cargodet', 'premium');

/**
 * BaseCargodet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $documento
 * @property float $status
 * @property string $ordentrab
 * @property string $codigo
 * @property string $idcampo
 * @property string $nombre
 * @property string $grupo
 * @property string $subgrupo
 * @property float $proceso
 * @property float $cantidad
 * @property string $tallas
 * @property string $colores
 * @property date $fecha
 * @property string $almacen
 * @property string $emisor
 * @property string $estacion
 * @property float $usaserial
 * @property string $seriales
 * @property string $ubicacion
 * @property string $almacenhas
 * @property float $precio
 * @property date $fechanul
 * @property string $useranul
 * @property string $motivoanul
 * @property string $lote
 * @property float $costo
 * @property float $costopromfecha
 * @property float $factor
 * @property float $tipo
 * 
 * @method string   getIdEmpresa()      Returns the current record's "id_empresa" value
 * @method string   getAgencia()        Returns the current record's "agencia" value
 * @method string   getDocumento()      Returns the current record's "documento" value
 * @method float    getStatus()         Returns the current record's "status" value
 * @method string   getOrdentrab()      Returns the current record's "ordentrab" value
 * @method string   getCodigo()         Returns the current record's "codigo" value
 * @method string   getIdcampo()        Returns the current record's "idcampo" value
 * @method string   getNombre()         Returns the current record's "nombre" value
 * @method string   getGrupo()          Returns the current record's "grupo" value
 * @method string   getSubgrupo()       Returns the current record's "subgrupo" value
 * @method float    getProceso()        Returns the current record's "proceso" value
 * @method float    getCantidad()       Returns the current record's "cantidad" value
 * @method string   getTallas()         Returns the current record's "tallas" value
 * @method string   getColores()        Returns the current record's "colores" value
 * @method date     getFecha()          Returns the current record's "fecha" value
 * @method string   getAlmacen()        Returns the current record's "almacen" value
 * @method string   getEmisor()         Returns the current record's "emisor" value
 * @method string   getEstacion()       Returns the current record's "estacion" value
 * @method float    getUsaserial()      Returns the current record's "usaserial" value
 * @method string   getSeriales()       Returns the current record's "seriales" value
 * @method string   getUbicacion()      Returns the current record's "ubicacion" value
 * @method string   getAlmacenhas()     Returns the current record's "almacenhas" value
 * @method float    getPrecio()         Returns the current record's "precio" value
 * @method date     getFechanul()       Returns the current record's "fechanul" value
 * @method string   getUseranul()       Returns the current record's "useranul" value
 * @method string   getMotivoanul()     Returns the current record's "motivoanul" value
 * @method string   getLote()           Returns the current record's "lote" value
 * @method float    getCosto()          Returns the current record's "costo" value
 * @method float    getCostopromfecha() Returns the current record's "costopromfecha" value
 * @method float    getFactor()         Returns the current record's "factor" value
 * @method float    getTipo()           Returns the current record's "tipo" value
 * @method Cargodet setIdEmpresa()      Sets the current record's "id_empresa" value
 * @method Cargodet setAgencia()        Sets the current record's "agencia" value
 * @method Cargodet setDocumento()      Sets the current record's "documento" value
 * @method Cargodet setStatus()         Sets the current record's "status" value
 * @method Cargodet setOrdentrab()      Sets the current record's "ordentrab" value
 * @method Cargodet setCodigo()         Sets the current record's "codigo" value
 * @method Cargodet setIdcampo()        Sets the current record's "idcampo" value
 * @method Cargodet setNombre()         Sets the current record's "nombre" value
 * @method Cargodet setGrupo()          Sets the current record's "grupo" value
 * @method Cargodet setSubgrupo()       Sets the current record's "subgrupo" value
 * @method Cargodet setProceso()        Sets the current record's "proceso" value
 * @method Cargodet setCantidad()       Sets the current record's "cantidad" value
 * @method Cargodet setTallas()         Sets the current record's "tallas" value
 * @method Cargodet setColores()        Sets the current record's "colores" value
 * @method Cargodet setFecha()          Sets the current record's "fecha" value
 * @method Cargodet setAlmacen()        Sets the current record's "almacen" value
 * @method Cargodet setEmisor()         Sets the current record's "emisor" value
 * @method Cargodet setEstacion()       Sets the current record's "estacion" value
 * @method Cargodet setUsaserial()      Sets the current record's "usaserial" value
 * @method Cargodet setSeriales()       Sets the current record's "seriales" value
 * @method Cargodet setUbicacion()      Sets the current record's "ubicacion" value
 * @method Cargodet setAlmacenhas()     Sets the current record's "almacenhas" value
 * @method Cargodet setPrecio()         Sets the current record's "precio" value
 * @method Cargodet setFechanul()       Sets the current record's "fechanul" value
 * @method Cargodet setUseranul()       Sets the current record's "useranul" value
 * @method Cargodet setMotivoanul()     Sets the current record's "motivoanul" value
 * @method Cargodet setLote()           Sets the current record's "lote" value
 * @method Cargodet setCosto()          Sets the current record's "costo" value
 * @method Cargodet setCostopromfecha() Sets the current record's "costopromfecha" value
 * @method Cargodet setFactor()         Sets the current record's "factor" value
 * @method Cargodet setTipo()           Sets the current record's "tipo" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCargodet extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cargodet');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('status', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('ordentrab', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('codigo', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('idcampo', 'string', 12, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '12',
             ));
        $this->hasColumn('nombre', 'string', 61, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '61',
             ));
        $this->hasColumn('grupo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('subgrupo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('proceso', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('cantidad', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tallas', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('colores', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('almacen', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '01',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('emisor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('estacion', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('usaserial', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('seriales', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('ubicacion', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('almacenhas', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('precio', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fechanul', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('useranul', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('motivoanul', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('lote', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('costo', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('costopromfecha', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('factor', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tipo', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}