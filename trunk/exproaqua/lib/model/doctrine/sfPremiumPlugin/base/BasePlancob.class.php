<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Plancob', 'premium');

/**
 * BasePlancob
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $planilla
 * @property string $cobrador
 * @property string $sector
 * @property date $desde
 * @property date $hasta
 * @property string $usuario
 * @property date $fechacrea
 * @property string $estacion
 * @property float $montoacob
 * @property float $totaldocum
 * @property float $filtrado
 * 
 * @method string  getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string  getAgencia()    Returns the current record's "agencia" value
 * @method string  getPlanilla()   Returns the current record's "planilla" value
 * @method string  getCobrador()   Returns the current record's "cobrador" value
 * @method string  getSector()     Returns the current record's "sector" value
 * @method date    getDesde()      Returns the current record's "desde" value
 * @method date    getHasta()      Returns the current record's "hasta" value
 * @method string  getUsuario()    Returns the current record's "usuario" value
 * @method date    getFechacrea()  Returns the current record's "fechacrea" value
 * @method string  getEstacion()   Returns the current record's "estacion" value
 * @method float   getMontoacob()  Returns the current record's "montoacob" value
 * @method float   getTotaldocum() Returns the current record's "totaldocum" value
 * @method float   getFiltrado()   Returns the current record's "filtrado" value
 * @method Plancob setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Plancob setAgencia()    Sets the current record's "agencia" value
 * @method Plancob setPlanilla()   Sets the current record's "planilla" value
 * @method Plancob setCobrador()   Sets the current record's "cobrador" value
 * @method Plancob setSector()     Sets the current record's "sector" value
 * @method Plancob setDesde()      Sets the current record's "desde" value
 * @method Plancob setHasta()      Sets the current record's "hasta" value
 * @method Plancob setUsuario()    Sets the current record's "usuario" value
 * @method Plancob setFechacrea()  Sets the current record's "fechacrea" value
 * @method Plancob setEstacion()   Sets the current record's "estacion" value
 * @method Plancob setMontoacob()  Sets the current record's "montoacob" value
 * @method Plancob setTotaldocum() Sets the current record's "totaldocum" value
 * @method Plancob setFiltrado()   Sets the current record's "filtrado" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BasePlancob extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('plancob');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('planilla', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('cobrador', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('sector', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('desde', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('hasta', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('usuario', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('fechacrea', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('estacion', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('montoacob', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('totaldocum', 'float', 11, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '11',
             ));
        $this->hasColumn('filtrado', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}