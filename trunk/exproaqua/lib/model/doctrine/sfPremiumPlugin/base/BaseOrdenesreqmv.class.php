<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Ordenesreqmv', 'premium');

/**
 * BaseOrdenesreqmv
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $documento
 * @property string $orden
 * @property string $codigo
 * @property string $pid
 * @property string $nombre
 * @property string $unidad
 * @property float $cantidad
 * @property float $cargado
 * @property float $status
 * @property date $fechanul
 * @property string $useranul
 * @property string $motivoanul
 * 
 * @method string       getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string       getAgencia()    Returns the current record's "agencia" value
 * @method string       getDocumento()  Returns the current record's "documento" value
 * @method string       getOrden()      Returns the current record's "orden" value
 * @method string       getCodigo()     Returns the current record's "codigo" value
 * @method string       getPid()        Returns the current record's "pid" value
 * @method string       getNombre()     Returns the current record's "nombre" value
 * @method string       getUnidad()     Returns the current record's "unidad" value
 * @method float        getCantidad()   Returns the current record's "cantidad" value
 * @method float        getCargado()    Returns the current record's "cargado" value
 * @method float        getStatus()     Returns the current record's "status" value
 * @method date         getFechanul()   Returns the current record's "fechanul" value
 * @method string       getUseranul()   Returns the current record's "useranul" value
 * @method string       getMotivoanul() Returns the current record's "motivoanul" value
 * @method Ordenesreqmv setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Ordenesreqmv setAgencia()    Sets the current record's "agencia" value
 * @method Ordenesreqmv setDocumento()  Sets the current record's "documento" value
 * @method Ordenesreqmv setOrden()      Sets the current record's "orden" value
 * @method Ordenesreqmv setCodigo()     Sets the current record's "codigo" value
 * @method Ordenesreqmv setPid()        Sets the current record's "pid" value
 * @method Ordenesreqmv setNombre()     Sets the current record's "nombre" value
 * @method Ordenesreqmv setUnidad()     Sets the current record's "unidad" value
 * @method Ordenesreqmv setCantidad()   Sets the current record's "cantidad" value
 * @method Ordenesreqmv setCargado()    Sets the current record's "cargado" value
 * @method Ordenesreqmv setStatus()     Sets the current record's "status" value
 * @method Ordenesreqmv setFechanul()   Sets the current record's "fechanul" value
 * @method Ordenesreqmv setUseranul()   Sets the current record's "useranul" value
 * @method Ordenesreqmv setMotivoanul() Sets the current record's "motivoanul" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseOrdenesreqmv extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ordenesreqmv');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('orden', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('codigo', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('pid', 'string', 12, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '12',
             ));
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('unidad', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('cantidad', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cargado', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('status', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('fechanul', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('useranul', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('motivoanul', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}