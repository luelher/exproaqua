<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Estimaciones', 'premium');

/**
 * BaseEstimaciones
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $origen
 * @property string $codigo
 * @property string $ano
 * @property float $fac_ene
 * @property float $fac_feb
 * @property float $fac_mar
 * @property float $fac_abr
 * @property float $fac_may
 * @property float $fac_jun
 * @property float $fac_jul
 * @property float $fac_ago
 * @property float $fac_sep
 * @property float $fac_oct
 * @property float $fac_nov
 * @property float $fac_dic
 * 
 * @method string       getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string       getAgencia()    Returns the current record's "agencia" value
 * @method string       getOrigen()     Returns the current record's "origen" value
 * @method string       getCodigo()     Returns the current record's "codigo" value
 * @method string       getAno()        Returns the current record's "ano" value
 * @method float        getFacEne()     Returns the current record's "fac_ene" value
 * @method float        getFacFeb()     Returns the current record's "fac_feb" value
 * @method float        getFacMar()     Returns the current record's "fac_mar" value
 * @method float        getFacAbr()     Returns the current record's "fac_abr" value
 * @method float        getFacMay()     Returns the current record's "fac_may" value
 * @method float        getFacJun()     Returns the current record's "fac_jun" value
 * @method float        getFacJul()     Returns the current record's "fac_jul" value
 * @method float        getFacAgo()     Returns the current record's "fac_ago" value
 * @method float        getFacSep()     Returns the current record's "fac_sep" value
 * @method float        getFacOct()     Returns the current record's "fac_oct" value
 * @method float        getFacNov()     Returns the current record's "fac_nov" value
 * @method float        getFacDic()     Returns the current record's "fac_dic" value
 * @method Estimaciones setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Estimaciones setAgencia()    Sets the current record's "agencia" value
 * @method Estimaciones setOrigen()     Sets the current record's "origen" value
 * @method Estimaciones setCodigo()     Sets the current record's "codigo" value
 * @method Estimaciones setAno()        Sets the current record's "ano" value
 * @method Estimaciones setFacEne()     Sets the current record's "fac_ene" value
 * @method Estimaciones setFacFeb()     Sets the current record's "fac_feb" value
 * @method Estimaciones setFacMar()     Sets the current record's "fac_mar" value
 * @method Estimaciones setFacAbr()     Sets the current record's "fac_abr" value
 * @method Estimaciones setFacMay()     Sets the current record's "fac_may" value
 * @method Estimaciones setFacJun()     Sets the current record's "fac_jun" value
 * @method Estimaciones setFacJul()     Sets the current record's "fac_jul" value
 * @method Estimaciones setFacAgo()     Sets the current record's "fac_ago" value
 * @method Estimaciones setFacSep()     Sets the current record's "fac_sep" value
 * @method Estimaciones setFacOct()     Sets the current record's "fac_oct" value
 * @method Estimaciones setFacNov()     Sets the current record's "fac_nov" value
 * @method Estimaciones setFacDic()     Sets the current record's "fac_dic" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseEstimaciones extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('estimaciones');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('origen', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('codigo', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('ano', 'string', 4, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('fac_ene', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_feb', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_mar', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_abr', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_may', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_jun', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_jul', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_ago', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_sep', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_oct', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_nov', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('fac_dic', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}