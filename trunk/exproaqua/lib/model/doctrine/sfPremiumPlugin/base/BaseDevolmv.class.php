<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Devolmv', 'premium');

/**
 * BaseDevolmv
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $tipodoc
 * @property string $documento
 * @property string $grupo
 * @property string $subgrupo
 * @property float $origen
 * @property string $codigo
 * @property string $codhijo
 * @property string $pid
 * @property string $nombre
 * @property float $costounit
 * @property float $preciounit
 * @property float $diferencia
 * @property float $dsctounit
 * @property float $dsctoprc
 * @property float $dsctoendm
 * @property float $dsctoendp
 * @property float $dscto1prc
 * @property float $dscto2prc
 * @property float $dscto3prc
 * @property float $dscto4prc
 * @property float $dscto5prc
 * @property float $preciofin
 * @property float $prcrecargo
 * @property float $recargouni
 * @property float $precioorig
 * @property float $cantidad
 * @property float $cntdevuelt
 * @property float $cntentrega
 * @property string $tallas
 * @property string $colores
 * @property float $montoneto
 * @property float $montototal
 * @property string $almacen
 * @property string $proveedor
 * @property date $fechadoc
 * @property float $impuesto1
 * @property float $impuesto2
 * @property float $impuesto3
 * @property float $impuesto4
 * @property float $impuesto5
 * @property float $impuesto6
 * @property float $timpueprc
 * @property float $impu_mto
 * @property string $unidad
 * @property float $comision
 * @property float $comisprc
 * @property string $vendedor
 * @property string $emisor
 * @property float $usaserial
 * @property float $tipoprecio
 * @property float $agrupado
 * @property float $seimporto
 * @property string $desdeimpor
 * @property string $notas
 * @property float $oferta
 * @property float $compuesto
 * @property float $usaexist
 * @property float $marca
 * @property float $aux1
 * @property string $estacion
 * @property float $clasifica
 * @property string $cuentacont
 * @property string $turno
 * @property float $cntagrupada
 * @property float $udinamica
 * @property float $cantref
 * @property string $unidadref
 * @property float $baseimpo1
 * @property float $baseimpo2
 * @property float $baseimpo3
 * @property string $lote
 * @property float $imp_nacional
 * @property float $imp_producc
 * @property float $sinimpuest
 * @property float $isrma
 * @property string $serialesrma
 * @property string $almacenrma
 * @property float $ofertaconvenio
 * @property string $cod_servidor
 * @property float $prc_comi_servidor
 * @property float $mto_comi_servidor
 * 
 * @method string  getIdEmpresa()         Returns the current record's "id_empresa" value
 * @method string  getAgencia()           Returns the current record's "agencia" value
 * @method string  getTipodoc()           Returns the current record's "tipodoc" value
 * @method string  getDocumento()         Returns the current record's "documento" value
 * @method string  getGrupo()             Returns the current record's "grupo" value
 * @method string  getSubgrupo()          Returns the current record's "subgrupo" value
 * @method float   getOrigen()            Returns the current record's "origen" value
 * @method string  getCodigo()            Returns the current record's "codigo" value
 * @method string  getCodhijo()           Returns the current record's "codhijo" value
 * @method string  getPid()               Returns the current record's "pid" value
 * @method string  getNombre()            Returns the current record's "nombre" value
 * @method float   getCostounit()         Returns the current record's "costounit" value
 * @method float   getPreciounit()        Returns the current record's "preciounit" value
 * @method float   getDiferencia()        Returns the current record's "diferencia" value
 * @method float   getDsctounit()         Returns the current record's "dsctounit" value
 * @method float   getDsctoprc()          Returns the current record's "dsctoprc" value
 * @method float   getDsctoendm()         Returns the current record's "dsctoendm" value
 * @method float   getDsctoendp()         Returns the current record's "dsctoendp" value
 * @method float   getDscto1prc()         Returns the current record's "dscto1prc" value
 * @method float   getDscto2prc()         Returns the current record's "dscto2prc" value
 * @method float   getDscto3prc()         Returns the current record's "dscto3prc" value
 * @method float   getDscto4prc()         Returns the current record's "dscto4prc" value
 * @method float   getDscto5prc()         Returns the current record's "dscto5prc" value
 * @method float   getPreciofin()         Returns the current record's "preciofin" value
 * @method float   getPrcrecargo()        Returns the current record's "prcrecargo" value
 * @method float   getRecargouni()        Returns the current record's "recargouni" value
 * @method float   getPrecioorig()        Returns the current record's "precioorig" value
 * @method float   getCantidad()          Returns the current record's "cantidad" value
 * @method float   getCntdevuelt()        Returns the current record's "cntdevuelt" value
 * @method float   getCntentrega()        Returns the current record's "cntentrega" value
 * @method string  getTallas()            Returns the current record's "tallas" value
 * @method string  getColores()           Returns the current record's "colores" value
 * @method float   getMontoneto()         Returns the current record's "montoneto" value
 * @method float   getMontototal()        Returns the current record's "montototal" value
 * @method string  getAlmacen()           Returns the current record's "almacen" value
 * @method string  getProveedor()         Returns the current record's "proveedor" value
 * @method date    getFechadoc()          Returns the current record's "fechadoc" value
 * @method float   getImpuesto1()         Returns the current record's "impuesto1" value
 * @method float   getImpuesto2()         Returns the current record's "impuesto2" value
 * @method float   getImpuesto3()         Returns the current record's "impuesto3" value
 * @method float   getImpuesto4()         Returns the current record's "impuesto4" value
 * @method float   getImpuesto5()         Returns the current record's "impuesto5" value
 * @method float   getImpuesto6()         Returns the current record's "impuesto6" value
 * @method float   getTimpueprc()         Returns the current record's "timpueprc" value
 * @method float   getImpuMto()           Returns the current record's "impu_mto" value
 * @method string  getUnidad()            Returns the current record's "unidad" value
 * @method float   getComision()          Returns the current record's "comision" value
 * @method float   getComisprc()          Returns the current record's "comisprc" value
 * @method string  getVendedor()          Returns the current record's "vendedor" value
 * @method string  getEmisor()            Returns the current record's "emisor" value
 * @method float   getUsaserial()         Returns the current record's "usaserial" value
 * @method float   getTipoprecio()        Returns the current record's "tipoprecio" value
 * @method float   getAgrupado()          Returns the current record's "agrupado" value
 * @method float   getSeimporto()         Returns the current record's "seimporto" value
 * @method string  getDesdeimpor()        Returns the current record's "desdeimpor" value
 * @method string  getNotas()             Returns the current record's "notas" value
 * @method float   getOferta()            Returns the current record's "oferta" value
 * @method float   getCompuesto()         Returns the current record's "compuesto" value
 * @method float   getUsaexist()          Returns the current record's "usaexist" value
 * @method float   getMarca()             Returns the current record's "marca" value
 * @method float   getAux1()              Returns the current record's "aux1" value
 * @method string  getEstacion()          Returns the current record's "estacion" value
 * @method float   getClasifica()         Returns the current record's "clasifica" value
 * @method string  getCuentacont()        Returns the current record's "cuentacont" value
 * @method string  getTurno()             Returns the current record's "turno" value
 * @method float   getCntagrupada()       Returns the current record's "cntagrupada" value
 * @method float   getUdinamica()         Returns the current record's "udinamica" value
 * @method float   getCantref()           Returns the current record's "cantref" value
 * @method string  getUnidadref()         Returns the current record's "unidadref" value
 * @method float   getBaseimpo1()         Returns the current record's "baseimpo1" value
 * @method float   getBaseimpo2()         Returns the current record's "baseimpo2" value
 * @method float   getBaseimpo3()         Returns the current record's "baseimpo3" value
 * @method string  getLote()              Returns the current record's "lote" value
 * @method float   getImpNacional()       Returns the current record's "imp_nacional" value
 * @method float   getImpProducc()        Returns the current record's "imp_producc" value
 * @method float   getSinimpuest()        Returns the current record's "sinimpuest" value
 * @method float   getIsrma()             Returns the current record's "isrma" value
 * @method string  getSerialesrma()       Returns the current record's "serialesrma" value
 * @method string  getAlmacenrma()        Returns the current record's "almacenrma" value
 * @method float   getOfertaconvenio()    Returns the current record's "ofertaconvenio" value
 * @method string  getCodServidor()       Returns the current record's "cod_servidor" value
 * @method float   getPrcComiServidor()   Returns the current record's "prc_comi_servidor" value
 * @method float   getMtoComiServidor()   Returns the current record's "mto_comi_servidor" value
 * @method Devolmv setIdEmpresa()         Sets the current record's "id_empresa" value
 * @method Devolmv setAgencia()           Sets the current record's "agencia" value
 * @method Devolmv setTipodoc()           Sets the current record's "tipodoc" value
 * @method Devolmv setDocumento()         Sets the current record's "documento" value
 * @method Devolmv setGrupo()             Sets the current record's "grupo" value
 * @method Devolmv setSubgrupo()          Sets the current record's "subgrupo" value
 * @method Devolmv setOrigen()            Sets the current record's "origen" value
 * @method Devolmv setCodigo()            Sets the current record's "codigo" value
 * @method Devolmv setCodhijo()           Sets the current record's "codhijo" value
 * @method Devolmv setPid()               Sets the current record's "pid" value
 * @method Devolmv setNombre()            Sets the current record's "nombre" value
 * @method Devolmv setCostounit()         Sets the current record's "costounit" value
 * @method Devolmv setPreciounit()        Sets the current record's "preciounit" value
 * @method Devolmv setDiferencia()        Sets the current record's "diferencia" value
 * @method Devolmv setDsctounit()         Sets the current record's "dsctounit" value
 * @method Devolmv setDsctoprc()          Sets the current record's "dsctoprc" value
 * @method Devolmv setDsctoendm()         Sets the current record's "dsctoendm" value
 * @method Devolmv setDsctoendp()         Sets the current record's "dsctoendp" value
 * @method Devolmv setDscto1prc()         Sets the current record's "dscto1prc" value
 * @method Devolmv setDscto2prc()         Sets the current record's "dscto2prc" value
 * @method Devolmv setDscto3prc()         Sets the current record's "dscto3prc" value
 * @method Devolmv setDscto4prc()         Sets the current record's "dscto4prc" value
 * @method Devolmv setDscto5prc()         Sets the current record's "dscto5prc" value
 * @method Devolmv setPreciofin()         Sets the current record's "preciofin" value
 * @method Devolmv setPrcrecargo()        Sets the current record's "prcrecargo" value
 * @method Devolmv setRecargouni()        Sets the current record's "recargouni" value
 * @method Devolmv setPrecioorig()        Sets the current record's "precioorig" value
 * @method Devolmv setCantidad()          Sets the current record's "cantidad" value
 * @method Devolmv setCntdevuelt()        Sets the current record's "cntdevuelt" value
 * @method Devolmv setCntentrega()        Sets the current record's "cntentrega" value
 * @method Devolmv setTallas()            Sets the current record's "tallas" value
 * @method Devolmv setColores()           Sets the current record's "colores" value
 * @method Devolmv setMontoneto()         Sets the current record's "montoneto" value
 * @method Devolmv setMontototal()        Sets the current record's "montototal" value
 * @method Devolmv setAlmacen()           Sets the current record's "almacen" value
 * @method Devolmv setProveedor()         Sets the current record's "proveedor" value
 * @method Devolmv setFechadoc()          Sets the current record's "fechadoc" value
 * @method Devolmv setImpuesto1()         Sets the current record's "impuesto1" value
 * @method Devolmv setImpuesto2()         Sets the current record's "impuesto2" value
 * @method Devolmv setImpuesto3()         Sets the current record's "impuesto3" value
 * @method Devolmv setImpuesto4()         Sets the current record's "impuesto4" value
 * @method Devolmv setImpuesto5()         Sets the current record's "impuesto5" value
 * @method Devolmv setImpuesto6()         Sets the current record's "impuesto6" value
 * @method Devolmv setTimpueprc()         Sets the current record's "timpueprc" value
 * @method Devolmv setImpuMto()           Sets the current record's "impu_mto" value
 * @method Devolmv setUnidad()            Sets the current record's "unidad" value
 * @method Devolmv setComision()          Sets the current record's "comision" value
 * @method Devolmv setComisprc()          Sets the current record's "comisprc" value
 * @method Devolmv setVendedor()          Sets the current record's "vendedor" value
 * @method Devolmv setEmisor()            Sets the current record's "emisor" value
 * @method Devolmv setUsaserial()         Sets the current record's "usaserial" value
 * @method Devolmv setTipoprecio()        Sets the current record's "tipoprecio" value
 * @method Devolmv setAgrupado()          Sets the current record's "agrupado" value
 * @method Devolmv setSeimporto()         Sets the current record's "seimporto" value
 * @method Devolmv setDesdeimpor()        Sets the current record's "desdeimpor" value
 * @method Devolmv setNotas()             Sets the current record's "notas" value
 * @method Devolmv setOferta()            Sets the current record's "oferta" value
 * @method Devolmv setCompuesto()         Sets the current record's "compuesto" value
 * @method Devolmv setUsaexist()          Sets the current record's "usaexist" value
 * @method Devolmv setMarca()             Sets the current record's "marca" value
 * @method Devolmv setAux1()              Sets the current record's "aux1" value
 * @method Devolmv setEstacion()          Sets the current record's "estacion" value
 * @method Devolmv setClasifica()         Sets the current record's "clasifica" value
 * @method Devolmv setCuentacont()        Sets the current record's "cuentacont" value
 * @method Devolmv setTurno()             Sets the current record's "turno" value
 * @method Devolmv setCntagrupada()       Sets the current record's "cntagrupada" value
 * @method Devolmv setUdinamica()         Sets the current record's "udinamica" value
 * @method Devolmv setCantref()           Sets the current record's "cantref" value
 * @method Devolmv setUnidadref()         Sets the current record's "unidadref" value
 * @method Devolmv setBaseimpo1()         Sets the current record's "baseimpo1" value
 * @method Devolmv setBaseimpo2()         Sets the current record's "baseimpo2" value
 * @method Devolmv setBaseimpo3()         Sets the current record's "baseimpo3" value
 * @method Devolmv setLote()              Sets the current record's "lote" value
 * @method Devolmv setImpNacional()       Sets the current record's "imp_nacional" value
 * @method Devolmv setImpProducc()        Sets the current record's "imp_producc" value
 * @method Devolmv setSinimpuest()        Sets the current record's "sinimpuest" value
 * @method Devolmv setIsrma()             Sets the current record's "isrma" value
 * @method Devolmv setSerialesrma()       Sets the current record's "serialesrma" value
 * @method Devolmv setAlmacenrma()        Sets the current record's "almacenrma" value
 * @method Devolmv setOfertaconvenio()    Sets the current record's "ofertaconvenio" value
 * @method Devolmv setCodServidor()       Sets the current record's "cod_servidor" value
 * @method Devolmv setPrcComiServidor()   Sets the current record's "prc_comi_servidor" value
 * @method Devolmv setMtoComiServidor()   Sets the current record's "mto_comi_servidor" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis Hernández
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDevolmv extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('devolmv');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('tipodoc', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('grupo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('subgrupo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('origen', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('codigo', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('codhijo', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('pid', 'string', 12, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '12',
             ));
        $this->hasColumn('nombre', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '80',
             ));
        $this->hasColumn('costounit', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('preciounit', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('diferencia', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dsctounit', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dsctoprc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dsctoendm', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dsctoendp', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dscto1prc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dscto2prc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dscto3prc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dscto4prc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dscto5prc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('preciofin', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('prcrecargo', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('recargouni', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('precioorig', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cantidad', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cntdevuelt', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cntentrega', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tallas', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('colores', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('montoneto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('montototal', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('almacen', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('proveedor', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('fechadoc', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('impuesto1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto3', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto4', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto5', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto6', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('timpueprc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impu_mto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('unidad', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('comision', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('comisprc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('vendedor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('emisor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('usaserial', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('tipoprecio', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('agrupado', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('seimporto', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('desdeimpor', 'string', 11, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '11',
             ));
        $this->hasColumn('notas', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('oferta', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('compuesto', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('usaexist', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('marca', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('aux1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('estacion', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('clasifica', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('cuentacont', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '40',
             ));
        $this->hasColumn('turno', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('cntagrupada', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('udinamica', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('cantref', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('unidadref', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('baseimpo1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('baseimpo2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('baseimpo3', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('lote', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('imp_nacional', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('imp_producc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('sinimpuest', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('isrma', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('serialesrma', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('almacenrma', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('ofertaconvenio', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cod_servidor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('prc_comi_servidor', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('mto_comi_servidor', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}