<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Devolmvc', 'premium');

/**
 * BaseDevolmvc
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_empresa
 * @property string $agencia
 * @property string $tipodoc
 * @property string $documento
 * @property string $ordentrab
 * @property string $grupo
 * @property string $subgrupo
 * @property float $origen
 * @property string $codigo
 * @property string $codhijo
 * @property string $pid
 * @property string $nombre
 * @property float $costopromfecha
 * @property float $costounit
 * @property float $preciounit
 * @property float $dsctounit
 * @property float $dsctoprc
 * @property float $cantidad
 * @property float $cntdevuelt
 * @property string $tallas
 * @property string $colores
 * @property float $montoneto
 * @property float $montototal
 * @property string $almacen
 * @property string $proveedor
 * @property date $fechadoc
 * @property float $impuesto1
 * @property float $impuesto2
 * @property float $impuesto3
 * @property float $impuesto4
 * @property float $impuesto5
 * @property float $impuesto6
 * @property float $timpueprc
 * @property float $impu_mto
 * @property string $unidad
 * @property string $cuentacont
 * @property float $comision
 * @property float $comisprc
 * @property string $vendedor
 * @property string $emisor
 * @property float $usaserial
 * @property float $tipoprecio
 * @property float $agrupado
 * @property float $seimporto
 * @property string $desdeimpor
 * @property string $notas
 * @property float $oferta
 * @property float $compuesto
 * @property float $usaexist
 * @property float $marca
 * @property float $aux1
 * @property string $estacion
 * @property float $integrado
 * @property string $referencia
 * @property float $factor
 * @property float $baseimpo1
 * @property float $baseimpo2
 * @property float $baseimpo3
 * @property string $lote
 * @property float $imp_nacional
 * @property float $imp_producc
 * 
 * @method string   getIdEmpresa()      Returns the current record's "id_empresa" value
 * @method string   getAgencia()        Returns the current record's "agencia" value
 * @method string   getTipodoc()        Returns the current record's "tipodoc" value
 * @method string   getDocumento()      Returns the current record's "documento" value
 * @method string   getOrdentrab()      Returns the current record's "ordentrab" value
 * @method string   getGrupo()          Returns the current record's "grupo" value
 * @method string   getSubgrupo()       Returns the current record's "subgrupo" value
 * @method float    getOrigen()         Returns the current record's "origen" value
 * @method string   getCodigo()         Returns the current record's "codigo" value
 * @method string   getCodhijo()        Returns the current record's "codhijo" value
 * @method string   getPid()            Returns the current record's "pid" value
 * @method string   getNombre()         Returns the current record's "nombre" value
 * @method float    getCostopromfecha() Returns the current record's "costopromfecha" value
 * @method float    getCostounit()      Returns the current record's "costounit" value
 * @method float    getPreciounit()     Returns the current record's "preciounit" value
 * @method float    getDsctounit()      Returns the current record's "dsctounit" value
 * @method float    getDsctoprc()       Returns the current record's "dsctoprc" value
 * @method float    getCantidad()       Returns the current record's "cantidad" value
 * @method float    getCntdevuelt()     Returns the current record's "cntdevuelt" value
 * @method string   getTallas()         Returns the current record's "tallas" value
 * @method string   getColores()        Returns the current record's "colores" value
 * @method float    getMontoneto()      Returns the current record's "montoneto" value
 * @method float    getMontototal()     Returns the current record's "montototal" value
 * @method string   getAlmacen()        Returns the current record's "almacen" value
 * @method string   getProveedor()      Returns the current record's "proveedor" value
 * @method date     getFechadoc()       Returns the current record's "fechadoc" value
 * @method float    getImpuesto1()      Returns the current record's "impuesto1" value
 * @method float    getImpuesto2()      Returns the current record's "impuesto2" value
 * @method float    getImpuesto3()      Returns the current record's "impuesto3" value
 * @method float    getImpuesto4()      Returns the current record's "impuesto4" value
 * @method float    getImpuesto5()      Returns the current record's "impuesto5" value
 * @method float    getImpuesto6()      Returns the current record's "impuesto6" value
 * @method float    getTimpueprc()      Returns the current record's "timpueprc" value
 * @method float    getImpuMto()        Returns the current record's "impu_mto" value
 * @method string   getUnidad()         Returns the current record's "unidad" value
 * @method string   getCuentacont()     Returns the current record's "cuentacont" value
 * @method float    getComision()       Returns the current record's "comision" value
 * @method float    getComisprc()       Returns the current record's "comisprc" value
 * @method string   getVendedor()       Returns the current record's "vendedor" value
 * @method string   getEmisor()         Returns the current record's "emisor" value
 * @method float    getUsaserial()      Returns the current record's "usaserial" value
 * @method float    getTipoprecio()     Returns the current record's "tipoprecio" value
 * @method float    getAgrupado()       Returns the current record's "agrupado" value
 * @method float    getSeimporto()      Returns the current record's "seimporto" value
 * @method string   getDesdeimpor()     Returns the current record's "desdeimpor" value
 * @method string   getNotas()          Returns the current record's "notas" value
 * @method float    getOferta()         Returns the current record's "oferta" value
 * @method float    getCompuesto()      Returns the current record's "compuesto" value
 * @method float    getUsaexist()       Returns the current record's "usaexist" value
 * @method float    getMarca()          Returns the current record's "marca" value
 * @method float    getAux1()           Returns the current record's "aux1" value
 * @method string   getEstacion()       Returns the current record's "estacion" value
 * @method float    getIntegrado()      Returns the current record's "integrado" value
 * @method string   getReferencia()     Returns the current record's "referencia" value
 * @method float    getFactor()         Returns the current record's "factor" value
 * @method float    getBaseimpo1()      Returns the current record's "baseimpo1" value
 * @method float    getBaseimpo2()      Returns the current record's "baseimpo2" value
 * @method float    getBaseimpo3()      Returns the current record's "baseimpo3" value
 * @method string   getLote()           Returns the current record's "lote" value
 * @method float    getImpNacional()    Returns the current record's "imp_nacional" value
 * @method float    getImpProducc()     Returns the current record's "imp_producc" value
 * @method Devolmvc setIdEmpresa()      Sets the current record's "id_empresa" value
 * @method Devolmvc setAgencia()        Sets the current record's "agencia" value
 * @method Devolmvc setTipodoc()        Sets the current record's "tipodoc" value
 * @method Devolmvc setDocumento()      Sets the current record's "documento" value
 * @method Devolmvc setOrdentrab()      Sets the current record's "ordentrab" value
 * @method Devolmvc setGrupo()          Sets the current record's "grupo" value
 * @method Devolmvc setSubgrupo()       Sets the current record's "subgrupo" value
 * @method Devolmvc setOrigen()         Sets the current record's "origen" value
 * @method Devolmvc setCodigo()         Sets the current record's "codigo" value
 * @method Devolmvc setCodhijo()        Sets the current record's "codhijo" value
 * @method Devolmvc setPid()            Sets the current record's "pid" value
 * @method Devolmvc setNombre()         Sets the current record's "nombre" value
 * @method Devolmvc setCostopromfecha() Sets the current record's "costopromfecha" value
 * @method Devolmvc setCostounit()      Sets the current record's "costounit" value
 * @method Devolmvc setPreciounit()     Sets the current record's "preciounit" value
 * @method Devolmvc setDsctounit()      Sets the current record's "dsctounit" value
 * @method Devolmvc setDsctoprc()       Sets the current record's "dsctoprc" value
 * @method Devolmvc setCantidad()       Sets the current record's "cantidad" value
 * @method Devolmvc setCntdevuelt()     Sets the current record's "cntdevuelt" value
 * @method Devolmvc setTallas()         Sets the current record's "tallas" value
 * @method Devolmvc setColores()        Sets the current record's "colores" value
 * @method Devolmvc setMontoneto()      Sets the current record's "montoneto" value
 * @method Devolmvc setMontototal()     Sets the current record's "montototal" value
 * @method Devolmvc setAlmacen()        Sets the current record's "almacen" value
 * @method Devolmvc setProveedor()      Sets the current record's "proveedor" value
 * @method Devolmvc setFechadoc()       Sets the current record's "fechadoc" value
 * @method Devolmvc setImpuesto1()      Sets the current record's "impuesto1" value
 * @method Devolmvc setImpuesto2()      Sets the current record's "impuesto2" value
 * @method Devolmvc setImpuesto3()      Sets the current record's "impuesto3" value
 * @method Devolmvc setImpuesto4()      Sets the current record's "impuesto4" value
 * @method Devolmvc setImpuesto5()      Sets the current record's "impuesto5" value
 * @method Devolmvc setImpuesto6()      Sets the current record's "impuesto6" value
 * @method Devolmvc setTimpueprc()      Sets the current record's "timpueprc" value
 * @method Devolmvc setImpuMto()        Sets the current record's "impu_mto" value
 * @method Devolmvc setUnidad()         Sets the current record's "unidad" value
 * @method Devolmvc setCuentacont()     Sets the current record's "cuentacont" value
 * @method Devolmvc setComision()       Sets the current record's "comision" value
 * @method Devolmvc setComisprc()       Sets the current record's "comisprc" value
 * @method Devolmvc setVendedor()       Sets the current record's "vendedor" value
 * @method Devolmvc setEmisor()         Sets the current record's "emisor" value
 * @method Devolmvc setUsaserial()      Sets the current record's "usaserial" value
 * @method Devolmvc setTipoprecio()     Sets the current record's "tipoprecio" value
 * @method Devolmvc setAgrupado()       Sets the current record's "agrupado" value
 * @method Devolmvc setSeimporto()      Sets the current record's "seimporto" value
 * @method Devolmvc setDesdeimpor()     Sets the current record's "desdeimpor" value
 * @method Devolmvc setNotas()          Sets the current record's "notas" value
 * @method Devolmvc setOferta()         Sets the current record's "oferta" value
 * @method Devolmvc setCompuesto()      Sets the current record's "compuesto" value
 * @method Devolmvc setUsaexist()       Sets the current record's "usaexist" value
 * @method Devolmvc setMarca()          Sets the current record's "marca" value
 * @method Devolmvc setAux1()           Sets the current record's "aux1" value
 * @method Devolmvc setEstacion()       Sets the current record's "estacion" value
 * @method Devolmvc setIntegrado()      Sets the current record's "integrado" value
 * @method Devolmvc setReferencia()     Sets the current record's "referencia" value
 * @method Devolmvc setFactor()         Sets the current record's "factor" value
 * @method Devolmvc setBaseimpo1()      Sets the current record's "baseimpo1" value
 * @method Devolmvc setBaseimpo2()      Sets the current record's "baseimpo2" value
 * @method Devolmvc setBaseimpo3()      Sets the current record's "baseimpo3" value
 * @method Devolmvc setLote()           Sets the current record's "lote" value
 * @method Devolmvc setImpNacional()    Sets the current record's "imp_nacional" value
 * @method Devolmvc setImpProducc()     Sets the current record's "imp_producc" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis Hernández
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDevolmvc extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('devolmvc');
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('tipodoc', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('documento', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('ordentrab', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('grupo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('subgrupo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('origen', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('codigo', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('codhijo', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('pid', 'string', 12, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '12',
             ));
        $this->hasColumn('nombre', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '80',
             ));
        $this->hasColumn('costopromfecha', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('costounit', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('preciounit', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dsctounit', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('dsctoprc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cantidad', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('cntdevuelt', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('tallas', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('colores', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('montoneto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('montototal', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('almacen', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('proveedor', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('fechadoc', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('impuesto1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto3', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto4', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto5', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impuesto6', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('timpueprc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('impu_mto', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('unidad', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('cuentacont', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '40',
             ));
        $this->hasColumn('comision', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('comisprc', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('vendedor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('emisor', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('usaserial', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('tipoprecio', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('agrupado', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('seimporto', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('desdeimpor', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('notas', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('oferta', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('compuesto', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('usaexist', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('marca', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('aux1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('estacion', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('integrado', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('referencia', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('factor', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('baseimpo1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('baseimpo2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('baseimpo3', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('lote', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('imp_nacional', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('imp_producc', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}