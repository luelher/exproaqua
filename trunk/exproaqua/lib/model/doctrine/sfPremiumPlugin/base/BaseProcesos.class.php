<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Procesos', 'premium');

/**
 * BaseProcesos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $id_empresa
 * @property string $agencia
 * @property float $modulo
 * @property string $titulo
 * @property string $programa
 * @property string $clave
 * @property float $tipo
 * @property string $comentario
 * 
 * @method integer  getId()         Returns the current record's "id" value
 * @method string   getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string   getAgencia()    Returns the current record's "agencia" value
 * @method float    getModulo()     Returns the current record's "modulo" value
 * @method string   getTitulo()     Returns the current record's "titulo" value
 * @method string   getPrograma()   Returns the current record's "programa" value
 * @method string   getClave()      Returns the current record's "clave" value
 * @method float    getTipo()       Returns the current record's "tipo" value
 * @method string   getComentario() Returns the current record's "comentario" value
 * @method Procesos setId()         Sets the current record's "id" value
 * @method Procesos setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Procesos setAgencia()    Sets the current record's "agencia" value
 * @method Procesos setModulo()     Sets the current record's "modulo" value
 * @method Procesos setTitulo()     Sets the current record's "titulo" value
 * @method Procesos setPrograma()   Sets the current record's "programa" value
 * @method Procesos setClave()      Sets the current record's "clave" value
 * @method Procesos setTipo()       Sets the current record's "tipo" value
 * @method Procesos setComentario() Sets the current record's "comentario" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseProcesos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('procesos');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('modulo', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('titulo', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('programa', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('clave', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('tipo', 'float', 2, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('comentario', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}