<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cambio', 'premium');

/**
 * BaseCambio
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $id_empresa
 * @property string $agencia
 * @property string $codigomon
 * @property string $nombre
 * @property date $fecha
 * @property float $cambio
 * 
 * @method integer getId()         Returns the current record's "id" value
 * @method string  getIdEmpresa()  Returns the current record's "id_empresa" value
 * @method string  getAgencia()    Returns the current record's "agencia" value
 * @method string  getCodigomon()  Returns the current record's "codigomon" value
 * @method string  getNombre()     Returns the current record's "nombre" value
 * @method date    getFecha()      Returns the current record's "fecha" value
 * @method float   getCambio()     Returns the current record's "cambio" value
 * @method Cambio  setId()         Sets the current record's "id" value
 * @method Cambio  setIdEmpresa()  Sets the current record's "id_empresa" value
 * @method Cambio  setAgencia()    Sets the current record's "agencia" value
 * @method Cambio  setCodigomon()  Sets the current record's "codigomon" value
 * @method Cambio  setNombre()     Sets the current record's "nombre" value
 * @method Cambio  setFecha()      Sets the current record's "fecha" value
 * @method Cambio  setCambio()     Sets the current record's "cambio" value
 * 
 * @package    exproaqua
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCambio extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cambio');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('id_empresa', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('agencia', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('codigomon', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('nombre', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => ' ',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('cambio', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.0000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}